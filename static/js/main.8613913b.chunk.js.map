{"version":3,"sources":["images/chrome-icon.svg","webpack:///./src/services/atracdenc-worker.ts?dc3c","serviceWorker.ts","utils.ts","services/netmd.ts","services/registry.ts","redux/upload-dialog-feature.ts","redux/rename-dialog-feature.ts","redux/error-dialog-feature.ts","redux/panic-dialog-feature.ts","redux/convert-dialog-feature.ts","redux/dump-dialog-feature.ts","redux/record-dialog-feature.ts","redux/app-feature.ts","redux/main-feature.ts","redux/store.ts","redux/actions.ts","components/about-dialog.tsx","components/topmenu.tsx","components/welcome.tsx","components/rename-dialog.tsx","components/upload-dialog.tsx","components/record-dialog.tsx","components/error-dialog.tsx","components/panic-dialog.tsx","components/convert-dialog.tsx","images/md0.svg","images/md1.svg","images/md2.svg","images/md3.svg","components/controls.tsx","components/dump-dialog.tsx","components/main.tsx","components/app.tsx","services/atracdenc-worker.ts","services/audio-export.ts","index.tsx","services/mediarecorder.ts"],"names":["module","exports","Worker","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","console","log","state","controller","onUpdate","onSuccess","update","catch","error","sleep","ms","Promise","resolve","setTimeout","async","sleepWithProgressCallback","cb","elapsedSecs","interval","setInterval","Math","min","clearInterval","useShallowEqualSelector","selector","useSelector","shallowEqual","getPublicPathFor","script","savePreference","key","value","localStorage","setItem","JSON","stringify","loadPreference","defaultValue","res","getItem","parse","e","sanitizeTitle","title","normalize","replace","EncodingName","Encoding","sp","lp2","lp4","getSortedTracks","disc","tracks","group","groups","track","push","index","encoding","duration","formatTimeFromFrames","sort","l","r","asyncMutex","target","propertyKey","descriptor","oldValue","args","mutex","this","release","acquire","apply","forAnyDesktop","theme","breakpoints","up","spacing","belowDesktop","down","forWideDesktop","require","NetMDUSBService","constructor","debug","netmdInterface","logger","Mutex","statusMonitorTimer","_fn","method","info","warn","child","iface","openNewDevice","usb","openPairedDevice","listContent","getDeviceStatus","netMd","getDeviceName","finalize","cacheTOC","setTrackTitle","syncTOC","newName","oldName","getDiscTitle","oldRawName","_getDiscTitle","hasGroups","indexOf","hasGroupsAndTitle","startsWith","newNameWithGroups","setDiscTitle","eraseTrack","eraseDisc","src","dst","moveTrack","data","format","progressCallback","total","byteLength","written","encrypted","updateProgress","w","webWorkerAsyncPacketIterator","makeGetAsyncPacketIteratorOnWorkerThread","encryptedBytes","mdTrack","MDTrack","download","writtenBytes","terminate","play","pause","stop","nextTrack","previousTrack","gotoTrack","getPosition","ServiceRegistry","slice","createSlice","name","initialState","visible","writtenProgress","encryptedProgress","totalProgress","trackTotal","trackConverting","trackCurrent","titleCurrent","titleConverting","reducers","setVisible","action","payload","setWriteProgress","setTrackProgress","current","converting","reducer","actions","enableBatching","setCurrentName","setIndex","setErrorMessage","dismissed","dismiss","titleSource","titleFormat","setFormat","setTitleSource","setTitleFormat","inputDeviceId","setInputDeviceId","trackDone","setProgress","mainView","loading","pairingFailed","pairingMessage","browserSupported","darkMode","aboutDialogVisible","setState","setLoading","setPairingFailed","setPairingMessage","setBrowserSupported","setDarkMode","showAboutDialog","deviceName","deviceStatus","setDisc","setDeviceName","setDeviceStatus","combineReducers","renameDialog","uploadDialog","errorDialog","panicDialog","convertDialog","dumpDialog","recordDialog","appState","main","resetStateAction","appActions","toString","store","configureStore","type","middleware","next","panicDialogActions","getDefaultMiddleware","Object","freeze","getState","control","params","dispatch","serviceRegistry","netmdService","prev","mainActions","appStateActions","batchActions","WireformatDict","SP","Wireformat","pcm","LP2","LP105","l105kbps","LP4","getTrackNameFromMediaTags","file","fileData","arrayBuffer","reject","jsmediatags","read","Blob","tags","artist","album","onError","convertAndUpload","files","audioExportService","wireformat","uploadDialogActions","updateProgressCallback","trackUpdate","length","updateTrack","maxTitleLength","getTracks","map","reduce","acc","floor","errorMessage","i","item","converted","convertNext","f","prepare","export","err","j","conversionIterator","extStartIndex","lastIndexOf","substring","upload","actionToDispatch","concat","errorDialogAction","Transition","React","forwardRef","props","ref","Slide","direction","AboutDialog","useDispatch","Dialog","open","maxWidth","fullWidth","TransitionComponent","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Link","rel","href","DialogActions","Button","onClick","useStyles","makeStyles","listItemIcon","minWidth","TopMenu","classes","discTitle","githubLinkRef","useRef","menuAnchorEl","setMenuAnchorEl","useState","menuOpen","handleMenuOpen","useCallback","event","currentTarget","handleDarkMode","handleMenuClose","handleWipeDisc","confirm","wipeDisc","handleRefresh","handleRenameDisc","renameDialogActions","handleExit","handleShowAbout","handleGithubLink","stopPropagation","click","menuItems","MenuItem","ListItemIcon","className","fontSize","ListItemText","Fragment","IconButton","aria-label","aria-controls","aria-haspopup","Menu","anchorEl","keepMounted","onClose","position","flex","display","justifyContent","flexDirection","alignItems","button","marginTop","chromeLogo","width","height","why","alignSelf","headBox","Welcome","toLowerCase","showWhyUnsupported","setWhyUnsupported","Box","Typography","component","variant","align","color","init","connect","pair","message","FormControl","style","visibility","FormHelperText","preventDefault","alt","ChromeIconPath","RenameDialog","renameDialogVisible","renameDialogTitle","renameDialogIndex","what","handleCancelRename","handleDoRename","renameDisc","renameTrack","TextField","autoFocus","label","onKeyDown","onChange","progressPerc","progressBar","uploadLabel","UploadDialog","progressValue","bufferValue","convertedValue","aria-describedby","LinearProgress","valueBuffer","RecordDialog","round","ErrorDialog","handleClose","errorDialogActions","PanicDialog","handleReloadApp","reload","handleIgnore","scroll","size","container","formControl","toggleButton","dialogContent","flexWrap","rightBlock","titleFormControl","ConvertDialog","convertDialogActions","handleChangeFormat","ev","newFormat","handleChangeTitleSource","newTitleSource","handleChangeTitleFormat","handleConvert","ToggleButtonGroup","exclusive","ToggleButton","Select","input","Input","_extends","assign","arguments","source","prototype","hasOwnProperty","call","createElement","fill","fillRule","d","SvgMd0","svgRef","viewBox","ForwardRef","SvgMd1","SvgMd2","SvgMd3","frames","MDIcon0","MDIcon1","MDIcon2","MDIcon3","from","transform","to","lcd","marginLeft","marginRight","paddingLeft","paddingRight","borderRadius","backgroundColor","palette","background","default","lcdText","overflow","left","fontFamily","lcdDisc","top","lcdDiscIcon","active","scrollingStatusMessage","whiteSpace","animationName","animationTimingFunction","animationIterationCount","statusMessage","Controls","handlePrev","handlePlay","handleStop","handleNext","trackIndex","deviceState","discPresent","lcdScroll","setLcdScroll","lcdScrollDuration","setLcdScrollDuration","lcdIconFrame","setLcdIconFrame","scrollTimerRef","lcdRef","useEffect","clearTimeout","domEl","textWidth","scrollWidth","lcdWidth","parentElement","offsetWidth","scrollDurationInSec","updateLCDScroll","lcdIconAnimationTimer","DiscFrame","animationDuration","flexFlow","selectEmpty","head","textShadow","typography","h2","textAlign","marginBottom","DumpDialog","trackIndexes","devices","setDevices","mediaRecorderService","stopTestInput","dumpDialogActions","handleChange","deviceId","playTestInput","handleStartTransfer","indexes","recordDialogAction","filter","t","entries","expected","every","_","initStream","startRecording","durationInSec","perc","stopRecording","downloadRecorded","closeStream","mediaDevices","getUserMedia","audio","inputDevices","enumerateDevices","device","kind","updateDeviceList","displayEmpty","disabled","add","bottom","right","overflowY","outline","toolbar","toolbarLabel","toolbarHighlight","secondary","lighten","light","text","primary","dark","formatBadge","BadgeImpl","badge","colorPrimary","border","paper","padding","verticalAlign","titleCell","textOverflow","durationCell","durationCellTime","indexCell","backdrop","zIndex","drawer","remainingTimeTooltip","textDecoration","textDecorationStyle","Main","selected","setSelected","selectedCount","moveMenuAnchorEl","setMoveMenuAnchorEl","handleShowMoveMenu","handleCloseMoveMenu","handleMoveSelectedTrack","destIndex","srcIndex","handleShowDumpDialog","uploadedFiles","setUploadedFiles","onDrop","acceptedFiles","rejectedFiles","getRootProps","getInputProps","isDragActive","useDropzone","accept","noClick","handleRenameDoubleClick","selectedIndex","currentName","find","Tooltip","arrow","Toolbar","clsx","Checkbox","indeterminate","checked","inputProps","PaperProps","maxHeight","Array","reverse","deleteTrack","Table","TableHead","TableRow","TableCell","TableBody","hover","includes","onDoubleClick","handleSelectClick","Backdrop","Fab","layout","bottomBar","copyrightTypography","minidiscLogo","controlsContainer","darkTheme","createMuiTheme","contrastText","lightTheme","App","ThemeProvider","CssBaseline","Paper","Date","getFullYear","CircularProgress","AtracdencProcess","worker","messageCallback","onmessage","handleMessage","bind","postMessage","bitrate","result","undefined","WorkerGlobalScope","self","Module","others","importScripts","m","setLogger","msg","stream","inWavFile","outAt3File","dataArray","Uint8Array","FS","writeFile","callMain","stat","tmp","outAt3FileStream","close","buffer","AtracdencWorker","ffmpegProcess","atracdencProcess","loglines","inFileName","outFileNameNoExt","setLogging","createWorker","corePath","workerPath","load","ext","split","Error","write","transcode","audioFormatRegex","inputFormatRegex","line","outFileName","encode","recorder","audioContext","analyserNode","gainNode","AudioContext","createGain","createAnalyser","createMediaStreamSource","destination","recordConstraints","autoGainControl","channelCount","echoCancellation","noiseSuppression","sampleRate","highpassFilter","audioTracks","getAudioTracks","getSettings","Recorder","record","forEach","exportWAV","url","URL","createObjectURL","a","document","body","appendChild","revokeObjectURL","removeChild","deferredPrompt","addEventListener","returnValue","ondisconnect","statusMonitorInterval","exceptionOccurred","shouldMonitorBeRunning","subscribe","ReactDOM","render","getElementById","process","origin","fetch","headers","response","contentType","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8613913b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chrome-icon.f3b6c54c.svg\";","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"e7da137555ce19c57c92.worker.js\");\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/final-service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    console.log('state change', installingWorker.state);\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n            registration.update(); // Check for new version everytime we load the page\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import { Disc, formatTimeFromFrames, Encoding } from 'netmd-js';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { RootState } from './redux/store';\nimport { Mutex } from 'async-mutex';\nimport { Theme } from '@material-ui/core';\n\nexport function sleep(ms: number) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\nexport async function sleepWithProgressCallback(ms: number, cb: (perc: number) => void) {\n    let elapsedSecs = 1;\n    let interval = setInterval(() => {\n        elapsedSecs++;\n        cb(Math.min(100, ((elapsedSecs * 1000) / ms) * 100));\n    }, 1000);\n    await sleep(ms);\n    window.clearInterval(interval);\n}\n\nexport function useShallowEqualSelector<TState = RootState, TSelected = unknown>(selector: (state: TState) => TSelected): TSelected {\n    return useSelector(selector, shallowEqual);\n}\n\nexport function debugEnabled() {\n    return process.env.NODE_ENV === 'development';\n}\n\nexport function getPublicPathFor(script: string) {\n    return `${process.env.PUBLIC_URL}/${script}`;\n}\n\nexport function savePreference(key: string, value: unknown) {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function loadPreference<T>(key: string, defaultValue: T): T {\n    let res = localStorage.getItem(key);\n    if (res === null) {\n        return defaultValue;\n    } else {\n        try {\n            return JSON.parse(res) as T;\n        } catch (e) {\n            return defaultValue;\n        }\n    }\n}\n\nexport function getAvailableCharsForTrackTitle(trackTitles: string[]) {\n    const maxChars = 1700; // see https://www.minidisc.org/md_toc.html\n    const usedChars = trackTitles.reduce((acc, title) => {\n        return acc + title.length;\n    }, 0);\n    return maxChars - usedChars;\n}\n\nexport function framesToSec(frames: number) {\n    return frames / 512;\n}\n\nexport function sanitizeTitle(title: string) {\n    return title.normalize('NFD').replace(/[^\\x00-\\x7F]/g, '');\n}\n\nconst EncodingName: { [k: number]: string } = {\n    [Encoding.sp]: 'SP',\n    [Encoding.lp2]: 'LP2',\n    [Encoding.lp4]: 'LP4',\n};\n\nexport function getSortedTracks(disc: Disc | null) {\n    let tracks: { index: number; title: string; group: string; duration: string; encoding: string }[] = [];\n    if (disc !== null) {\n        for (let group of disc.groups) {\n            for (let track of group.tracks) {\n                tracks.push({\n                    index: track.index,\n                    title: track.title ?? `Unknown Title`,\n                    group: group.title ?? ``,\n                    encoding: EncodingName[track.encoding],\n                    duration: formatTimeFromFrames(track.duration, false),\n                });\n            }\n        }\n    }\n    tracks.sort((l, r) => l.index - r.index);\n    return tracks;\n}\n\nexport function asyncMutex(target: any, propertyKey: string, descriptor: PropertyDescriptor) {\n    // This is meant to be used only with classes having a \"mutex\" instance property\n    const oldValue = descriptor.value;\n    descriptor.value = async function(...args: any) {\n        const mutex = (this as any).mutex as Mutex;\n        const release = await mutex.acquire();\n        try {\n            return await oldValue.apply(this, args);\n        } finally {\n            release();\n        }\n    };\n    return descriptor;\n}\n\nexport function forAnyDesktop(theme: Theme) {\n    return theme.breakpoints.up(600 + theme.spacing(2) * 2);\n}\n\nexport function belowDesktop(theme: Theme) {\n    return theme.breakpoints.down(600 + theme.spacing(2) * 2);\n}\n\nexport function forWideDesktop(theme: Theme) {\n    return theme.breakpoints.up(700 + theme.spacing(2) * 2) + ` and (min-height: 750px)`;\n}\n\ndeclare let process: any;\n","import {\n    openNewDevice,\n    NetMDInterface,\n    Disc,\n    listContent,\n    openPairedDevice,\n    Wireformat,\n    MDTrack,\n    download,\n    getDeviceStatus,\n    DeviceStatus,\n} from 'netmd-js';\nimport { makeGetAsyncPacketIteratorOnWorkerThread } from 'netmd-js/dist/web-encrypt-worker';\nimport { Logger } from 'netmd-js/dist/logger';\nimport { asyncMutex, sanitizeTitle, sleep } from '../utils';\nimport { Mutex } from 'async-mutex';\n\nconst Worker = require('worker-loader!netmd-js/dist/web-encrypt-worker.js'); // eslint-disable-line import/no-webpack-loader-syntax\n\nexport interface NetMDService {\n    mutex: Mutex;\n    getDeviceStatus(): Promise<DeviceStatus>;\n    pair(): Promise<boolean>;\n    connect(): Promise<boolean>;\n    listContent(): Promise<Disc>;\n    getDeviceName(): Promise<string>;\n    finalize(): Promise<void>;\n    renameTrack(index: number, newTitle: string): Promise<void>;\n    renameDisc(newName: string): Promise<void>;\n    deleteTrack(index: number): Promise<void>;\n    moveTrack(src: number, dst: number): Promise<void>;\n    wipeDisc(): Promise<void>;\n    upload(\n        title: string,\n        data: ArrayBuffer,\n        format: Wireformat,\n        progressCallback: (progress: { written: number; encrypted: number; total: number }) => void\n    ): Promise<void>;\n\n    play(): Promise<void>;\n    pause(): Promise<void>;\n    stop(): Promise<void>;\n    next(): Promise<void>;\n    prev(): Promise<void>;\n    gotoTrack(index: number): Promise<void>;\n    getPosition(): Promise<number[] | null>;\n}\n\nexport class NetMDUSBService implements NetMDService {\n    private netmdInterface?: NetMDInterface;\n    private logger?: Logger;\n    public mutex = new Mutex();\n    public statusMonitorTimer: any;\n\n    constructor({ debug = false }: { debug: boolean }) {\n        if (debug) {\n            // Logging a few methods that have been causing issues with some units\n            const _fn = (...args: any) => {\n                if (args && args[0] && args[0].method) {\n                    console.log(...args);\n                }\n            };\n            this.logger = {\n                debug: _fn,\n                info: _fn,\n                warn: _fn,\n                error: _fn,\n                child: () => this.logger!,\n            };\n        }\n    }\n\n    async pair() {\n        let iface = await openNewDevice(navigator.usb, this.logger);\n        if (iface === null) {\n            return false;\n        }\n        this.netmdInterface = iface;\n        return true;\n    }\n\n    async connect() {\n        let iface = await openPairedDevice(navigator.usb, this.logger);\n        if (iface === null) {\n            return false;\n        }\n        this.netmdInterface = iface;\n        return true;\n    }\n\n    @asyncMutex\n    async listContent() {\n        return await listContent(this.netmdInterface!);\n    }\n\n    @asyncMutex\n    async getDeviceStatus() {\n        return await getDeviceStatus(this.netmdInterface!);\n    }\n\n    @asyncMutex\n    async getDeviceName() {\n        return await this.netmdInterface!.netMd.getDeviceName();\n    }\n\n    @asyncMutex\n    async finalize() {\n        await this.netmdInterface!.netMd.finalize();\n    }\n\n    @asyncMutex\n    async renameTrack(index: number, title: string) {\n        // Removing non ascii chars... Sorry, I didn't implement char encoding.\n        title = sanitizeTitle(title);\n        await this.netmdInterface!.cacheTOC();\n        await this.netmdInterface!.setTrackTitle(index, title);\n        await this.netmdInterface!.syncTOC();\n    }\n\n    @asyncMutex\n    async renameDisc(newName: string) {\n        // TODO: This whole function should be moved in netmd-js\n        const oldName = await this.netmdInterface!.getDiscTitle();\n        const oldRawName = await this.netmdInterface!._getDiscTitle();\n        const hasGroups = oldRawName.indexOf('//') >= 0;\n        const hasGroupsAndTitle = oldRawName.startsWith('0;');\n\n        if (newName === oldName) {\n            return;\n        }\n\n        let newNameWithGroups;\n\n        if (hasGroups) {\n            if (hasGroupsAndTitle) {\n                newNameWithGroups = oldRawName.replace(/^0;.*?\\/\\//, newName !== '' ? `0;${newName}//` : ``); // Replace or delete the old title\n            } else {\n                newNameWithGroups = `0;${newName}//${oldRawName}`; // Add the new title\n            }\n        } else {\n            newNameWithGroups = newName;\n        }\n\n        await this.netmdInterface!.cacheTOC();\n        await this.netmdInterface!.setDiscTitle(newNameWithGroups);\n        await this.netmdInterface!.syncTOC();\n    }\n\n    @asyncMutex\n    async deleteTrack(index: number) {\n        await this.netmdInterface!.eraseTrack(index);\n        await sleep(100);\n    }\n\n    @asyncMutex\n    async wipeDisc() {\n        await this.netmdInterface!.eraseDisc();\n    }\n\n    @asyncMutex\n    async moveTrack(src: number, dst: number) {\n        await this.netmdInterface!.moveTrack(src, dst);\n    }\n\n    async upload(\n        title: string,\n        data: ArrayBuffer,\n        format: Wireformat,\n        progressCallback: (progress: { written: number; encrypted: number; total: number }) => void\n    ) {\n        let total = data.byteLength;\n        let written = 0;\n        let encrypted = 0;\n        function updateProgress() {\n            progressCallback({ written, encrypted, total });\n        }\n\n        let w = new Worker();\n\n        let webWorkerAsyncPacketIterator = makeGetAsyncPacketIteratorOnWorkerThread(w, ({ encryptedBytes }) => {\n            encrypted = encryptedBytes;\n            updateProgress();\n        });\n\n        // Removing non ascii chars... Sorry, I didn't implement char encoding.\n        title = sanitizeTitle(title);\n        let mdTrack = new MDTrack(title, format, data, 0x80000, webWorkerAsyncPacketIterator);\n\n        await download(this.netmdInterface!, mdTrack, ({ writtenBytes }) => {\n            written = writtenBytes;\n            updateProgress();\n        });\n\n        w.terminate();\n    }\n\n    @asyncMutex\n    async play() {\n        await this.netmdInterface!.play();\n    }\n    @asyncMutex\n    async pause() {\n        await this.netmdInterface!.pause();\n    }\n    @asyncMutex\n    async stop() {\n        await this.netmdInterface!.stop();\n    }\n    @asyncMutex\n    async next() {\n        await this.netmdInterface!.nextTrack();\n    }\n    @asyncMutex\n    async prev() {\n        await this.netmdInterface!.previousTrack();\n    }\n\n    @asyncMutex\n    async gotoTrack(index: number) {\n        await this.netmdInterface!.gotoTrack(index);\n    }\n\n    @asyncMutex\n    async getPosition() {\n        return await this.netmdInterface!.getPosition();\n    }\n}\n","import { NetMDService } from './netmd';\nimport { AudioExportService } from './audio-export';\nimport { MediaRecorderService } from './mediarecorder';\n\ninterface ServiceRegistry {\n    netmdService?: NetMDService;\n    audioExportService?: AudioExportService;\n    mediaRecorderService?: MediaRecorderService;\n}\n\nconst ServiceRegistry: ServiceRegistry = {};\n\nexport default ServiceRegistry;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface LoadingDialogState {\n    visible: boolean;\n    writtenProgress: number;\n    encryptedProgress: number;\n    totalProgress: number;\n\n    trackTotal: number;\n    trackConverting: number;\n    trackCurrent: number;\n\n    titleCurrent: string;\n    titleConverting: string;\n}\n\nconst initialState: LoadingDialogState = {\n    visible: false,\n    // Current Track Upload\n    writtenProgress: 0,\n    encryptedProgress: 0,\n    totalProgress: 1,\n\n    // Tracks done\n    trackTotal: 1,\n    trackConverting: 0,\n    trackCurrent: 0,\n    titleCurrent: '',\n    titleConverting: '',\n};\n\nexport const slice = createSlice({\n    name: 'uploadDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setWriteProgress: (state, action: PayloadAction<{ written: number; encrypted: number; total: number }>) => {\n            state.encryptedProgress = action.payload.encrypted;\n            state.writtenProgress = action.payload.written;\n            state.totalProgress = action.payload.total;\n        },\n        setTrackProgress: (\n            state,\n            action: PayloadAction<{ total: number; current: number; converting: number; titleCurrent: string; titleConverting: string }>\n        ) => {\n            state.trackTotal = action.payload.total;\n            state.trackCurrent = action.payload.current;\n            state.trackConverting = action.payload.converting;\n            state.titleCurrent = action.payload.titleCurrent;\n            state.titleConverting = action.payload.titleConverting;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface RenameDialogState {\n    visible: boolean;\n    title: string;\n    index: number;\n}\n\nconst initialState: RenameDialogState = {\n    visible: false,\n    title: '',\n    index: -1,\n};\n\nexport const slice = createSlice({\n    name: 'renameDialog',\n    initialState,\n    reducers: {\n        setVisible: (state: RenameDialogState, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setCurrentName: (state: RenameDialogState, action: PayloadAction<string>) => {\n            state.title = action.payload;\n        },\n        setIndex: (state: RenameDialogState, action: PayloadAction<number>) => {\n            state.index = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface ErrorDialogState {\n    visible: boolean;\n    error: string;\n}\n\nconst initialState: ErrorDialogState = {\n    visible: false,\n    error: ``,\n};\n\nconst slice = createSlice({\n    name: 'errorDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setErrorMessage: (state, action: PayloadAction<string>) => {\n            state.error = `${action.payload}`;\n        },\n    },\n});\n\nexport const { actions, reducer } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport const initialState = {\n    visible: false,\n    dismissed: false, // This will prevent showing the dialog during the same session\n};\n\nconst slice = createSlice({\n    name: 'panicDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        dismiss: (state, action: PayloadAction<void>) => {\n            state.visible = false;\n            state.dismissed = true;\n        },\n    },\n});\n\nexport const { actions, reducer } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\nimport { savePreference, loadPreference } from '../utils';\n\nexport type TitleSourceType = 'file' | 'media';\nexport type TitleFormatType = 'title' | 'album-title' | 'artist-title' | 'artist-album-title';\n\nexport interface ConvertDialogFeature {\n    visible: boolean;\n    format: string;\n    titleSource: TitleSourceType;\n    titleFormat: TitleFormatType;\n}\n\nconst initialState: ConvertDialogFeature = {\n    visible: false,\n    format: `LP2`,\n    titleSource: loadPreference('trackTitleSource', 'file') as TitleSourceType,\n    titleFormat: loadPreference('trackTitleFormat', 'title') as TitleFormatType,\n};\n\nconst slice = createSlice({\n    name: 'convertDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setFormat: (state, action: PayloadAction<string>) => {\n            state.format = action.payload;\n        },\n        setTitleSource: (state, action: PayloadAction<TitleSourceType>) => {\n            state.titleSource = action.payload;\n            savePreference('trackTitleSource', state.titleSource);\n        },\n        setTitleFormat: (state, action: PayloadAction<TitleFormatType>) => {\n            state.titleFormat = action.payload;\n            savePreference('trackTitleFormat', state.titleFormat);\n        },\n    },\n});\n\nexport const { actions, reducer } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface DumpDialogState {\n    visible: boolean;\n    inputDeviceId: string;\n}\n\nconst initialState: DumpDialogState = {\n    visible: false,\n    inputDeviceId: '',\n};\n\nexport const slice = createSlice({\n    name: 'dumpDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setInputDeviceId: (state, action: PayloadAction<string>) => {\n            state.inputDeviceId = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface RecordingDialogState {\n    visible: boolean;\n\n    trackTotal: number;\n    trackDone: number;\n    trackCurrent: number;\n\n    titleCurrent: string;\n}\n\nconst initialState: RecordingDialogState = {\n    visible: false,\n\n    trackTotal: 1,\n    trackDone: 0,\n    trackCurrent: 0,\n\n    titleCurrent: '',\n\n    // visible: true,\n    // trackTotal: 4,\n    // trackDone: 1,\n    // trackCurrent: 25,\n\n    // titleCurrent: 'Seconda traccia',\n};\n\nexport const slice = createSlice({\n    name: 'recordDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setProgress: (\n            state,\n            action: PayloadAction<{ trackTotal: number; trackDone: number; trackCurrent: number; titleCurrent: string }>\n        ) => {\n            state.trackTotal = action.payload.trackTotal;\n            state.trackDone = action.payload.trackDone;\n            state.trackCurrent = action.payload.trackCurrent;\n            state.titleCurrent = action.payload.titleCurrent;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\nimport { savePreference, loadPreference } from '../utils';\n\ntype Views = 'WELCOME' | 'MAIN';\n\nexport interface AppState {\n    mainView: Views;\n    loading: boolean;\n    pairingFailed: boolean;\n    pairingMessage: string;\n    browserSupported: boolean;\n    darkMode: boolean;\n    aboutDialogVisible: boolean;\n}\n\nconst initialState: AppState = {\n    mainView: 'WELCOME',\n    loading: false,\n    pairingFailed: false,\n    pairingMessage: ``,\n    browserSupported: true,\n    darkMode: loadPreference('darkMode', false),\n    aboutDialogVisible: false,\n};\n\nexport const slice = createSlice({\n    name: 'app',\n    initialState,\n    reducers: {\n        setState: (state, action: PayloadAction<Views>) => {\n            state.mainView = action.payload;\n        },\n        setLoading: (state, action: PayloadAction<boolean>) => {\n            state.loading = action.payload;\n        },\n        setPairingFailed: (state, action: PayloadAction<boolean>) => {\n            state.pairingFailed = action.payload;\n        },\n        setPairingMessage: (state, action: PayloadAction<string>) => {\n            state.pairingMessage = action.payload;\n        },\n        setBrowserSupported: (state, action: PayloadAction<boolean>) => {\n            state.browserSupported = action.payload;\n        },\n        setDarkMode: (state, action: PayloadAction<boolean>) => {\n            state.darkMode = action.payload;\n            savePreference('darkMode', state.darkMode);\n        },\n        showAboutDialog: (state, action: PayloadAction<boolean>) => {\n            state.aboutDialogVisible = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { Disc, DeviceStatus } from 'netmd-js';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface MainState {\n    disc: Disc | null;\n    deviceName: string;\n    deviceStatus: DeviceStatus | null;\n}\n\nconst initialState: MainState = {\n    disc: null,\n    deviceName: '',\n    deviceStatus: null,\n};\n\nexport const slice = createSlice({\n    name: 'main',\n    initialState,\n    reducers: {\n        setDisc: (state, action: PayloadAction<Disc>) => {\n            state.disc = action.payload;\n        },\n        setDeviceName: (state, action: PayloadAction<string>) => {\n            state.deviceName = action.payload;\n        },\n        setDeviceStatus: (state, action: PayloadAction<DeviceStatus | null>) => {\n            state.deviceStatus = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { configureStore, getDefaultMiddleware, Middleware, combineReducers } from '@reduxjs/toolkit';\nimport uploadDialog from './upload-dialog-feature';\nimport renameDialog from './rename-dialog-feature';\nimport errorDialog from './error-dialog-feature';\nimport panicDialog, { actions as panicDialogActions } from './panic-dialog-feature';\nimport convertDialog from './convert-dialog-feature';\nimport dumpDialog from './dump-dialog-feature';\nimport recordDialog from './record-dialog-feature';\nimport appState, { actions as appActions } from './app-feature';\nimport main from './main-feature';\n\nconst errorCatcher: Middleware = store => next => async action => {\n    try {\n        await next(action);\n    } catch (e) {\n        console.error(e);\n        next(panicDialogActions.setVisible(true));\n    }\n};\n\nlet reducer = combineReducers({\n    renameDialog,\n    uploadDialog,\n    errorDialog,\n    panicDialog,\n    convertDialog,\n    dumpDialog,\n    recordDialog,\n    appState,\n    main,\n});\n\nconst resetStateAction = appActions.setState.toString();\nconst resetStatePayoload = 'WELCOME';\nconst resetStateReducer: typeof reducer = function(...args) {\n    const [state, action] = args;\n    if (action.type === resetStateAction && action.payload === resetStatePayoload) {\n        return initialState;\n    }\n    return reducer(...args);\n};\n\nexport const store = configureStore({\n    reducer: resetStateReducer,\n    middleware: [errorCatcher, ...getDefaultMiddleware()],\n});\n\nconst initialState = Object.freeze(store.getState());\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { batchActions } from 'redux-batched-actions';\nimport { AppDispatch, RootState } from './store';\nimport { actions as uploadDialogActions } from './upload-dialog-feature';\nimport { actions as renameDialogActions } from './rename-dialog-feature';\nimport { actions as errorDialogAction } from './error-dialog-feature';\nimport { actions as recordDialogAction } from './record-dialog-feature';\nimport { actions as appStateActions } from './app-feature';\nimport { actions as mainActions } from './main-feature';\nimport serviceRegistry from '../services/registry';\nimport { Wireformat, getTracks } from 'netmd-js';\nimport { AnyAction } from '@reduxjs/toolkit';\nimport { getAvailableCharsForTrackTitle, framesToSec, sleepWithProgressCallback, sleep } from '../utils';\nimport jsmediatags from 'jsmediatags';\nimport { TitleSourceType, TitleFormatType } from './convert-dialog-feature';\n\nexport function control(action: 'play' | 'stop' | 'next' | 'prev' | 'goto', params?: unknown) {\n    return async function(dispatch: AppDispatch, getState: () => RootState) {\n        switch (action) {\n            case 'play':\n                await serviceRegistry.netmdService!.play();\n                break;\n            case 'stop':\n                await serviceRegistry.netmdService!.stop();\n                break;\n            case 'next':\n                await serviceRegistry.netmdService!.next();\n                break;\n            case 'prev':\n                await serviceRegistry.netmdService!.prev();\n                break;\n            case 'goto':\n                if (params && typeof params === 'number' && params >= 0) {\n                    await serviceRegistry.netmdService!.gotoTrack(params);\n                }\n                break;\n        }\n        // CAVEAT: change-track might take a up to a few seconds to complete.\n        // We wait 500ms and let the monitor do further updates\n        await sleep(500);\n        try {\n            let deviceStatus = await serviceRegistry.netmdService!.getDeviceStatus();\n            dispatch(mainActions.setDeviceStatus(deviceStatus));\n        } catch (e) {\n            console.log('control: Cannot get device status');\n        }\n    };\n}\n\nexport function pair() {\n    return async function(dispatch: AppDispatch, getState: () => RootState) {\n        dispatch(appStateActions.setPairingFailed(false));\n\n        await serviceRegistry.audioExportService!.init();\n\n        try {\n            let connected = await serviceRegistry.netmdService!.connect();\n            if (connected) {\n                dispatch(appStateActions.setState('MAIN'));\n                return;\n            }\n        } catch (err) {\n            console.error(err);\n            // In case of error, just log and try to pair\n        }\n\n        try {\n            let paired = await serviceRegistry.netmdService!.pair();\n            if (paired) {\n                dispatch(appStateActions.setState('MAIN'));\n                return;\n            }\n            dispatch(batchActions([appStateActions.setPairingMessage(`Connection Failed`), appStateActions.setPairingFailed(true)]));\n        } catch (err) {\n            console.error(err);\n            let message = (err as Error).message;\n            dispatch(batchActions([appStateActions.setPairingMessage(message), appStateActions.setPairingFailed(true)]));\n        }\n    };\n}\n\nexport function listContent() {\n    return async function(dispatch: AppDispatch) {\n        // Issue loading\n        dispatch(appStateActions.setLoading(true));\n        let disc = await serviceRegistry.netmdService!.listContent();\n        let deviceName = await serviceRegistry.netmdService!.getDeviceName();\n        let deviceStatus = null;\n        try {\n            deviceStatus = await serviceRegistry.netmdService!.getDeviceStatus();\n        } catch (e) {\n            console.log('listContent: Cannot get device status');\n        }\n        dispatch(\n            batchActions([\n                mainActions.setDisc(disc),\n                mainActions.setDeviceName(deviceName),\n                mainActions.setDeviceStatus(deviceStatus),\n                appStateActions.setLoading(false),\n            ])\n        );\n    };\n}\n\nexport function renameTrack({ index, newName }: { index: number; newName: string }) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        dispatch(renameDialogActions.setVisible(false));\n        try {\n            await netmdService!.renameTrack(index, newName);\n        } catch (err) {\n            console.error(err);\n            dispatch(batchActions([errorDialogAction.setVisible(true), errorDialogAction.setErrorMessage(`Rename failed.`)]));\n        }\n        listContent()(dispatch);\n    };\n}\n\nexport function renameDisc({ newName }: { newName: string }) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        await netmdService!.renameDisc(newName);\n        dispatch(renameDialogActions.setVisible(false));\n        listContent()(dispatch);\n    };\n}\n\nexport function deleteTracks(indexes: number[]) {\n    return async function(dispatch: AppDispatch) {\n        const confirmation = window.confirm(\n            `Proceed with Delete Track${indexes.length !== 1 ? 's' : ''}? This operation cannot be undone.`\n        );\n        if (!confirmation) {\n            return;\n        }\n        const { netmdService } = serviceRegistry;\n        dispatch(appStateActions.setLoading(true));\n        indexes = indexes.sort();\n        indexes.reverse();\n        for (let index of indexes) {\n            await netmdService!.deleteTrack(index);\n        }\n        listContent()(dispatch);\n    };\n}\n\nexport function wipeDisc() {\n    return async function(dispatch: AppDispatch) {\n        const confirmation = window.confirm(`Proceed with Wipe Disc? This operation cannot be undone.`);\n        if (!confirmation) {\n            return;\n        }\n        const { netmdService } = serviceRegistry;\n        dispatch(appStateActions.setLoading(true));\n        await netmdService!.wipeDisc();\n        listContent()(dispatch);\n    };\n}\n\nexport function moveTrack(srcIndex: number, destIndex: number) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        await netmdService!.moveTrack(srcIndex, destIndex);\n        listContent()(dispatch);\n    };\n}\n\nexport function recordTracks(indexes: number[], deviceId: string) {\n    return async function(dispatch: AppDispatch, getState: () => RootState) {\n        dispatch(\n            batchActions([\n                recordDialogAction.setVisible(true),\n                recordDialogAction.setProgress({ trackTotal: indexes.length, trackDone: 0, trackCurrent: 0, titleCurrent: '' }),\n            ])\n        );\n\n        let disc = getState().main.disc;\n        let tracks = getTracks(disc!).filter(t => indexes.indexOf(t.index) >= 0);\n\n        const { netmdService, mediaRecorderService } = serviceRegistry;\n        await serviceRegistry.netmdService!.stop();\n\n        for (let [i, track] of tracks.entries()) {\n            dispatch(\n                recordDialogAction.setProgress({\n                    trackTotal: tracks.length,\n                    trackDone: i,\n                    trackCurrent: -1,\n                    titleCurrent: track.title ?? '',\n                })\n            );\n\n            // Wait for the track to be ready to play from 0:00\n            await netmdService!.gotoTrack(track.index);\n            await netmdService!.play();\n            console.log('Waiting for track to be ready to play');\n            let position = await netmdService!.getPosition();\n            let expected = [track.index, 0, 0, 1];\n            while (position === null || !expected.every((_, i) => expected[i] === position![i])) {\n                await sleep(250);\n                position = await netmdService!.getPosition();\n            }\n            await netmdService!.pause();\n            await netmdService?.gotoTrack(track.index);\n            console.log('Track is ready to play');\n\n            // Start recording and play track\n            await mediaRecorderService?.initStream(deviceId);\n            await mediaRecorderService?.startRecording();\n            await netmdService!.play();\n\n            // Wait until track is finished\n            let durationInSec = framesToSec(track.duration);\n            // await sleep(durationInSec * 1000);\n            await sleepWithProgressCallback(durationInSec * 1000, (perc: number) => {\n                dispatch(\n                    recordDialogAction.setProgress({\n                        trackTotal: tracks.length,\n                        trackDone: i,\n                        trackCurrent: perc,\n                        titleCurrent: track.title ?? '',\n                    })\n                );\n            });\n\n            // Stop recording and download the wav\n            await mediaRecorderService?.stopRecording();\n            mediaRecorderService?.downloadRecorded(`${track.title}`);\n\n            await mediaRecorderService?.closeStream();\n        }\n\n        await netmdService!.stop();\n        dispatch(recordDialogAction.setVisible(false));\n    };\n}\n\nexport const WireformatDict: { [k: string]: Wireformat } = {\n    SP: Wireformat.pcm,\n    LP2: Wireformat.lp2,\n    LP105: Wireformat.l105kbps,\n    LP4: Wireformat.lp4,\n};\n\nasync function getTrackNameFromMediaTags(file: File, titleFormat: TitleFormatType) {\n    const fileData = await file.arrayBuffer();\n    return await new Promise<string>((resolve, reject) => {\n        jsmediatags.read(new Blob([fileData]), {\n            onSuccess: data => {\n                const title = data.tags.title ?? 'Unknown Title';\n                const artist = data.tags.artist ?? 'Unknown Artist';\n                const album = data.tags.album ?? 'Unknown Album';\n                switch (titleFormat) {\n                    case 'title': {\n                        resolve(title);\n                        break;\n                    }\n                    case 'artist-title': {\n                        resolve(`${artist} - ${title}`);\n                        break;\n                    }\n                    case 'album-title': {\n                        resolve(`${album} - ${title}`);\n                        break;\n                    }\n                    case 'artist-album-title': {\n                        resolve(`${artist} - ${album} - ${title}`);\n                        break;\n                    }\n                }\n            },\n            onError: error => {\n                reject(error);\n            },\n        });\n    });\n}\n\nexport function convertAndUpload(files: File[], format: string, titleSource: TitleSourceType, titleFormat: TitleFormatType) {\n    return async function(dispatch: AppDispatch, getState: () => RootState) {\n        const { audioExportService, netmdService } = serviceRegistry;\n        const wireformat = WireformatDict[format];\n\n        await netmdService?.stop();\n        dispatch(uploadDialogActions.setVisible(true));\n\n        const updateProgressCallback = ({ written, encrypted, total }: { written: number; encrypted: number; total: number }) => {\n            dispatch(uploadDialogActions.setWriteProgress({ written, encrypted, total }));\n        };\n\n        let trackUpdate: {\n            current: number;\n            converting: number;\n            total: number;\n            titleCurrent: string;\n            titleConverting: string;\n        } = {\n            current: 0,\n            converting: 0,\n            total: files.length,\n            titleCurrent: '',\n            titleConverting: '',\n        };\n        const updateTrack = () => {\n            dispatch(uploadDialogActions.setTrackProgress(trackUpdate));\n        };\n\n        let conversionIterator = async function*(files: File[]) {\n            let converted: Promise<{ file: File; data: ArrayBuffer }>[] = [];\n\n            let i = 0;\n            function convertNext() {\n                if (i === files.length) {\n                    trackUpdate.converting = i;\n                    trackUpdate.titleConverting = ``;\n                    updateTrack();\n                    return;\n                }\n\n                let f = files[i];\n                trackUpdate.converting = i;\n                trackUpdate.titleConverting = f.name;\n                updateTrack();\n                i++;\n\n                converted.push(\n                    new Promise(async (resolve, reject) => {\n                        let data: ArrayBuffer;\n                        try {\n                            await audioExportService!.prepare(f);\n                            data = await audioExportService!.export({ format });\n                            convertNext();\n                            resolve({ file: f, data: data });\n                        } catch (err) {\n                            error = err;\n                            errorMessage = `${f.name}: Unsupported or unrecognized format`;\n                            reject(err);\n                        }\n                    })\n                );\n            }\n            convertNext();\n\n            let j = 0;\n            while (j < converted.length) {\n                yield await converted[j];\n                delete converted[j];\n                j++;\n            }\n        };\n\n        let disc = getState().main.disc;\n        let maxTitleLength = disc ? getAvailableCharsForTrackTitle(getTracks(disc).map(track => track.title || ``)) : -1;\n        maxTitleLength = Math.floor(maxTitleLength / files.length);\n\n        let error: any;\n        let errorMessage = ``;\n        let i = 1;\n        for await (let item of conversionIterator(files)) {\n            const { file, data } = item;\n\n            let title = file.name;\n            if (titleSource === 'media') {\n                try {\n                    title = await getTrackNameFromMediaTags(file, titleFormat);\n                } catch (err) {\n                    console.error(err);\n                }\n            }\n\n            const extStartIndex = title.lastIndexOf('.');\n            if (extStartIndex > 0) {\n                title = title.substring(0, extStartIndex);\n            }\n            if (maxTitleLength > -1) {\n                title = title.substring(0, maxTitleLength);\n            }\n\n            trackUpdate.current = i++;\n            trackUpdate.titleCurrent = title;\n            updateTrack();\n            updateProgressCallback({ written: 0, encrypted: 0, total: 100 });\n            try {\n                await netmdService?.upload(title, data, wireformat, updateProgressCallback);\n            } catch (err) {\n                error = err;\n                errorMessage = `${file.name}: Error uploading to device`;\n                break;\n            }\n        }\n\n        let actionToDispatch: AnyAction[] = [uploadDialogActions.setVisible(false)];\n\n        if (error) {\n            console.error(error);\n            actionToDispatch = actionToDispatch.concat([\n                errorDialogAction.setVisible(true),\n                errorDialogAction.setErrorMessage(errorMessage),\n            ]);\n        }\n\n        dispatch(batchActions(actionToDispatch));\n        listContent()(dispatch);\n    };\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { actions as appActions } from '../redux/app-feature';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const AboutDialog = (props: {}) => {\n    const dispatch = useDispatch();\n\n    let visible = useShallowEqualSelector(state => state.appState.aboutDialogVisible);\n\n    const handleClose = () => {\n        dispatch(appActions.showAboutDialog(false));\n    };\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"about-dialog-slide-title\"\n        >\n            <DialogTitle id=\"about-dialog-slide-title\">About Web MiniDisc</DialogTitle>\n            <DialogContent>\n                <DialogContentText>Web MiniDisc has been made possible by</DialogContentText>\n                <ul>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://www.ffmpeg.org/\" target=\"_blank\">\n                            FFmpeg\n                        </Link>{' '}\n                        and{' '}\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/ffmpegjs/FFmpeg\" target=\"_blank\">\n                            ffmpegjs\n                        </Link>\n                        , to read your audio files (wav, mp3, ogg, mp4, etc...).\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/dcherednik/atracdenc/\" target=\"_blank\">\n                            Atracdenc\n                        </Link>\n                        , to support atrac3 encoding (lp2, lp4 audio formats).\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://emscripten.org/\" target=\"_blank\">\n                            Emscripten\n                        </Link>\n                        , to run both FFmpeg and Atracdenc in the browser.\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/cybercase/netmd-js\" target=\"_blank\">\n                            netmd-js\n                        </Link>\n                        , to send commands to NetMD devices using Javascript.\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/glaubitz/linux-minidisc\" target=\"_blank\">\n                            linux-minidisc\n                        </Link>\n                        , to make the netmd-js project possible.\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://material-ui.com/\" target=\"_blank\">\n                            material-ui\n                        </Link>\n                        , to build the user interface.\n                    </li>\n                </ul>\n                <DialogContentText>Attribution</DialogContentText>\n                <ul>\n                    <li>\n                        MiniDisc logo from{' '}\n                        <Link rel=\"noopener noreferrer\" href=\"https://en.wikipedia.org/wiki/MiniDisc\" target=\"_blank\">\n                            https://en.wikipedia.org/wiki/MiniDisc\n                        </Link>\n                    </li>\n                    <li>\n                        MiniDisc icon from{' '}\n                        <Link\n                            rel=\"noopener noreferrer\"\n                            href=\"https://www.deviantart.com/blinkybill/art/Sony-MiniDisc-Plastic-Icon-473812540\"\n                            target=\"_blank\"\n                        >\n                            http://fav.me/d7u3g3g\n                        </Link>\n                    </li>\n                </ul>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { batchActions } from 'redux-batched-actions';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport { wipeDisc, listContent } from '../redux/actions';\nimport { actions as appActions } from '../redux/app-feature';\nimport { actions as renameDialogActions } from '../redux/rename-dialog-feature';\nimport { useShallowEqualSelector } from '../utils';\nimport Link from '@material-ui/core/Link';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EditIcon from '@material-ui/icons/Edit';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ToggleOffIcon from '@material-ui/icons/ToggleOff';\nimport ToggleOnIcon from '@material-ui/icons/ToggleOn';\n\nconst useStyles = makeStyles(theme => ({\n    listItemIcon: {\n        minWidth: theme.spacing(5),\n    },\n}));\n\nexport const TopMenu = function() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    let { mainView, darkMode } = useShallowEqualSelector(state => state.appState);\n    let discTitle = useShallowEqualSelector(state => state.main.disc?.title ?? ``);\n\n    const githubLinkRef = React.useRef<null | HTMLAnchorElement>(null);\n    const [menuAnchorEl, setMenuAnchorEl] = React.useState<null | HTMLElement>(null);\n    const menuOpen = Boolean(menuAnchorEl);\n\n    const handleMenuOpen = useCallback(\n        (event: React.MouseEvent<HTMLElement>) => {\n            setMenuAnchorEl(event.currentTarget);\n        },\n        [setMenuAnchorEl]\n    );\n\n    const handleDarkMode = useCallback(() => {\n        dispatch(appActions.setDarkMode(!darkMode));\n    }, [dispatch, darkMode]);\n\n    const handleMenuClose = useCallback(() => {\n        setMenuAnchorEl(null);\n    }, [setMenuAnchorEl]);\n\n    const handleWipeDisc = useCallback(() => {\n        dispatch(wipeDisc());\n        handleMenuClose();\n    }, [dispatch, handleMenuClose]);\n\n    const handleRefresh = useCallback(() => {\n        dispatch(listContent());\n        handleMenuClose();\n    }, [dispatch, handleMenuClose]);\n\n    const handleRenameDisc = useCallback(() => {\n        dispatch(\n            batchActions([\n                renameDialogActions.setVisible(true),\n                renameDialogActions.setCurrentName(discTitle),\n                renameDialogActions.setIndex(-1),\n            ])\n        );\n        handleMenuClose();\n    }, [dispatch, handleMenuClose]);\n\n    const handleExit = useCallback(() => {\n        dispatch(appActions.setState('WELCOME'));\n        handleMenuClose();\n    }, [dispatch, handleMenuClose]);\n\n    const handleShowAbout = useCallback(() => {\n        dispatch(appActions.showAboutDialog(true));\n        handleMenuClose();\n    }, [dispatch, handleMenuClose]);\n\n    const handleGithubLink = useCallback(\n        (event: React.MouseEvent<HTMLElement>) => {\n            event.stopPropagation();\n            if (event.target !== githubLinkRef.current) {\n                // Prevent opening the link twice\n                githubLinkRef.current?.click();\n            }\n            handleMenuClose();\n        },\n        [handleMenuClose]\n    );\n\n    const menuItems = [];\n    if (mainView === 'MAIN') {\n        menuItems.push(\n            <MenuItem key=\"update\" onClick={handleRefresh}>\n                <ListItemIcon className={classes.listItemIcon}>\n                    <RefreshIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Reload TOC</ListItemText>\n            </MenuItem>\n        );\n        menuItems.push(\n            <MenuItem key=\"title\" onClick={handleRenameDisc}>\n                <ListItemIcon className={classes.listItemIcon}>\n                    <EditIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Rename Disc</ListItemText>\n            </MenuItem>\n        );\n        menuItems.push(\n            <MenuItem key=\"wipe\" onClick={handleWipeDisc}>\n                <ListItemIcon className={classes.listItemIcon}>\n                    <DeleteForeverIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Wipe Disc</ListItemText>\n            </MenuItem>\n        );\n        menuItems.push(\n            <MenuItem key=\"exit\" onClick={handleExit}>\n                <ListItemIcon className={classes.listItemIcon}>\n                    <ExitToAppIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText>Exit</ListItemText>\n            </MenuItem>\n        );\n    }\n    menuItems.push(\n        <MenuItem key=\"darkMode\" onClick={handleDarkMode}>\n            <ListItemIcon className={classes.listItemIcon}>\n                {/* <Switch name=\"darkModeSwitch\" inputProps={{ 'aria-label': 'Dark Mode switch' }} size=\"small\" /> */}\n                {darkMode ? <ToggleOnIcon fontSize=\"small\" /> : <ToggleOffIcon fontSize=\"small\" />}\n            </ListItemIcon>\n            <ListItemText>Dark Mode</ListItemText>\n        </MenuItem>\n    );\n    menuItems.push(\n        <MenuItem key=\"about\" onClick={handleShowAbout}>\n            <ListItemIcon className={classes.listItemIcon}>\n                <InfoIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText>About</ListItemText>\n        </MenuItem>\n    );\n    menuItems.push(\n        <MenuItem key=\"github\" onClick={handleGithubLink}>\n            <ListItemIcon className={classes.listItemIcon}>\n                <GitHubIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText>\n                <Link\n                    rel=\"noopener noreferrer\"\n                    href=\"https://github.com/cybercase/webminidisc\"\n                    target=\"_blank\"\n                    ref={githubLinkRef}\n                    onClick={handleGithubLink}\n                >\n                    Fork me on GitHub\n                </Link>\n            </ListItemText>\n        </MenuItem>\n    );\n\n    return (\n        <React.Fragment>\n            <IconButton aria-label=\"actions\" aria-controls=\"actions-menu\" aria-haspopup=\"true\" onClick={handleMenuOpen}>\n                <MoreVertIcon />\n            </IconButton>\n            <Menu id=\"actions-menu\" anchorEl={menuAnchorEl} keepMounted open={menuOpen} onClose={handleMenuClose}>\n                {menuItems}\n            </Menu>\n        </React.Fragment>\n    );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { pair } from '../redux/actions';\n\nimport { useShallowEqualSelector } from '../utils';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\n\nimport { AboutDialog } from './about-dialog';\nimport { TopMenu } from './topmenu';\nimport ChromeIconPath from '../images/chrome-icon.svg';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        position: 'relative',\n        flex: '1 1 auto',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        minWidth: 150,\n    },\n    spacing: {\n        marginTop: theme.spacing(1),\n    },\n    chromeLogo: {\n        marginTop: theme.spacing(1),\n        width: 96,\n        height: 96,\n    },\n    why: {\n        alignSelf: 'flex-start',\n        marginTop: theme.spacing(3),\n    },\n    headBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}));\n\nexport const Welcome = (props: {}) => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const { browserSupported, pairingFailed, pairingMessage } = useShallowEqualSelector(state => state.appState);\n    if (pairingMessage.toLowerCase().match(/denied/)) {\n        // show linux instructions\n    }\n    // Access denied.\n\n    const [showWhyUnsupported, setWhyUnsupported] = useState(false);\n    const handleLearnWhy = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        setWhyUnsupported(true);\n    };\n\n    return (\n        <React.Fragment>\n            <Box className={classes.headBox}>\n                <Typography component=\"h1\" variant=\"h4\">\n                    Web MiniDisc\n                </Typography>\n                <TopMenu />\n            </Box>\n            <Typography component=\"h2\" variant=\"body2\">\n                Brings NetMD Devices to the Web\n            </Typography>\n            <Box className={classes.main}>\n                {browserSupported ? (\n                    <React.Fragment>\n                        <Typography component=\"h2\" variant=\"subtitle1\" align=\"center\" className={classes.spacing}>\n                            Press the button to connect to a NetMD device\n                        </Typography>\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => dispatch(pair())} className={classes.button}>\n                            Connect\n                        </Button>\n\n                        <FormControl error={true} className={classes.spacing} style={{ visibility: pairingFailed ? 'visible' : 'hidden' }}>\n                            <FormHelperText>{pairingMessage}</FormHelperText>\n                        </FormControl>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography component=\"h2\" variant=\"subtitle1\" align=\"center\" className={classes.spacing}>\n                            This Web browser is not supported.&nbsp;\n                            <Link rel=\"noopener noreferrer\" href=\"#\" onClick={handleLearnWhy}>\n                                Learn Why\n                            </Link>\n                        </Typography>\n\n                        <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.google.com/chrome/\">\n                            <img alt=\"Chrome Logo\" src={ChromeIconPath} className={classes.chromeLogo} />\n                        </Link>\n\n                        <Typography component=\"h2\" variant=\"subtitle1\" align=\"center\" className={classes.spacing}>\n                            Try using{' '}\n                            <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.google.com/chrome/\">\n                                Chrome\n                            </Link>{' '}\n                            instead\n                        </Typography>\n\n                        {showWhyUnsupported ? (\n                            <>\n                                <Typography component=\"p\" variant=\"body2\" className={classes.why}>\n                                    Web MiniDisc requires a browser that supports both{' '}\n                                    <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://wicg.github.io/webusb/\">\n                                        WebUSB\n                                    </Link>{' '}\n                                    and{' '}\n                                    <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://webassembly.org/\">\n                                        WebAssembly\n                                    </Link>\n                                    .\n                                </Typography>\n                                <ul>\n                                    <li>WebUSB is needed to control the NetMD device via the USB connection to your computer.</li>\n                                    <li>WebAssembly is used to convert the music to a MiniDisc compatible format</li>\n                                </ul>\n                            </>\n                        ) : null}\n                    </React.Fragment>\n                )}\n            </Box>\n            <AboutDialog />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\nimport { actions as renameDialogActions } from '../redux/rename-dialog-feature';\nimport { renameTrack, renameDisc } from '../redux/actions';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const RenameDialog = (props: {}) => {\n    let dispatch = useDispatch();\n\n    let renameDialogVisible = useShallowEqualSelector(state => state.renameDialog.visible);\n    let renameDialogTitle = useShallowEqualSelector(state => state.renameDialog.title);\n    let renameDialogIndex = useShallowEqualSelector(state => state.renameDialog.index);\n\n    const what = renameDialogIndex < 0 ? `Disc` : `Track`;\n\n    const handleCancelRename = () => {\n        dispatch(renameDialogActions.setVisible(false));\n    };\n\n    const handleDoRename = () => {\n        if (renameDialogIndex < 0) {\n            dispatch(renameDisc({ newName: renameDialogTitle }));\n        } else {\n            dispatch(renameTrack({ index: renameDialogIndex, newName: renameDialogTitle }));\n        }\n    };\n\n    return (\n        <Dialog\n            open={renameDialogVisible}\n            onClose={handleCancelRename}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"rename-dialog-title\"\n        >\n            <DialogTitle id=\"rename-dialog-title\">Rename {what}</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    id=\"name\"\n                    label={`${what} Name`}\n                    type=\"text\"\n                    fullWidth\n                    value={renameDialogTitle}\n                    onKeyDown={event => {\n                        event.key === `Enter` && handleDoRename();\n                    }}\n                    onChange={event => {\n                        dispatch(renameDialogActions.setCurrentName(event.target.value.substring(0, 120))); // MAX title length\n                    }}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCancelRename}>Cancel</Button>\n                <Button color={'primary'} onClick={handleDoRename}>\n                    Rename\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useShallowEqualSelector } from '../utils';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nconst useStyles = makeStyles(theme => ({\n    progressPerc: {\n        marginTop: theme.spacing(1),\n    },\n    progressBar: {\n        marginTop: theme.spacing(3),\n    },\n    uploadLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const UploadDialog = (props: {}) => {\n    const classes = useStyles();\n\n    let {\n        visible,\n        writtenProgress,\n        encryptedProgress,\n        totalProgress,\n\n        trackTotal,\n        trackCurrent,\n        trackConverting,\n        titleCurrent,\n        titleConverting,\n    } = useShallowEqualSelector(state => state.uploadDialog);\n\n    let progressValue = Math.floor((writtenProgress / totalProgress) * 100);\n    let bufferValue = Math.floor((encryptedProgress / totalProgress) * 100);\n    let convertedValue = Math.floor((trackConverting / trackTotal) * 100);\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Recording...</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    {convertedValue === 100 && trackConverting === trackTotal\n                        ? `Conversion completed`\n                        : `Converting ${trackConverting + 1} of ${trackTotal}: ${titleConverting}`}\n                </DialogContentText>\n                <LinearProgress\n                    className={classes.progressBar}\n                    variant={convertedValue === 0 ? 'indeterminate' : 'determinate'}\n                    color=\"primary\"\n                    value={convertedValue}\n                />\n                <Box className={classes.progressPerc}>{convertedValue}%</Box>\n\n                <DialogContentText id=\"alert-dialog-slide-description\" className={classes.uploadLabel}>\n                    Uploading {trackCurrent} of {trackTotal}: {titleCurrent}\n                </DialogContentText>\n                <LinearProgress\n                    className={classes.progressBar}\n                    variant=\"buffer\"\n                    color=\"secondary\"\n                    value={progressValue}\n                    valueBuffer={bufferValue}\n                />\n                <Box className={classes.progressPerc}>{progressValue}%</Box>\n            </DialogContent>\n            <DialogActions></DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useShallowEqualSelector } from '../utils';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nconst useStyles = makeStyles(theme => ({\n    progressPerc: {\n        marginTop: theme.spacing(1),\n    },\n    progressBar: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const RecordDialog = (props: {}) => {\n    const classes = useStyles();\n\n    let { visible, trackTotal, trackDone, trackCurrent, titleCurrent } = useShallowEqualSelector(state => state.recordDialog);\n\n    let progressValue = Math.round(trackCurrent);\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"record-dialog-slide-title\"\n            aria-describedby=\"record-dialog-slide-description\"\n        >\n            <DialogTitle id=\"record-dialog-slide-title\">Recording...</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"record-dialog-slide-description\">\n                    {`Recording track ${trackDone + 1} of ${trackTotal}: ${titleCurrent}`}\n                </DialogContentText>\n                <LinearProgress\n                    className={classes.progressBar}\n                    variant={trackCurrent >= 0 ? 'determinate' : 'indeterminate'}\n                    color=\"primary\"\n                    value={progressValue}\n                />\n                <Box className={classes.progressPerc}>{progressValue >= 0 ? `${progressValue}%` : ``}</Box>\n            </DialogContent>\n            <DialogActions></DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { actions as errorDialogActions } from '../redux/error-dialog-feature';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ErrorDialog = (props: {}) => {\n    const dispatch = useDispatch();\n\n    let { visible, error } = useShallowEqualSelector(state => state.errorDialog);\n\n    const handleClose = useCallback(() => {\n        dispatch(errorDialogActions.setVisible(false));\n    }, [dispatch]);\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"error-dialog-slide-title\"\n            aria-describedby=\"error-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Error</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">{error}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\nimport { actions as panicDialogActions } from '../redux/panic-dialog-feature';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport { Typography } from '@material-ui/core';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const PanicDialog = (props: {}) => {\n    const dispatch = useDispatch();\n\n    let { visible, dismissed } = useShallowEqualSelector(state => state.panicDialog);\n\n    const handleReloadApp = useCallback(() => {\n        window.location.reload();\n    }, []);\n\n    const handleIgnore = useCallback(() => {\n        dispatch(panicDialogActions.dismiss());\n    }, [dispatch]);\n\n    return (\n        <Dialog\n            open={visible && !dismissed}\n            maxWidth={'sm'}\n            fullWidth={true}\n            scroll={'paper'}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"error-dialog-slide-title\"\n            aria-describedby=\"error-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Oops… Something unexpected happened.</DialogTitle>\n            <DialogContent>\n                <Typography color=\"textSecondary\" variant=\"body1\" component=\"div\">\n                    Try to restart the app. If the error persists, try the followings:\n                    <ol>\n                        <li>Use your browser in incognito mode.</li>\n                        <li>Use a blank MiniDisc.</li>\n                        <li>Try to use Web MiniDisc on another computer.</li>\n                    </ol>\n                    If this does not solve the error, your unit might not be supported yet or you have encountered a bug. The full error is\n                    reported in the JS console.\n                </Typography>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleIgnore} size=\"small\">\n                    Ignore and Continue\n                </Button>\n                <Button onClick={handleReloadApp} color=\"primary\">\n                    Restart the App\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { actions as convertDialogActions } from '../redux/convert-dialog-feature';\nimport { convertAndUpload } from '../redux/actions';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport { Typography } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    formControl: {\n        minWidth: 60,\n    },\n    toggleButton: {\n        minWidth: 40,\n    },\n    dialogContent: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    rightBlock: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    titleFormControl: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\nexport const ConvertDialog = (props: { files: File[] }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    let { visible, format, titleSource, titleFormat } = useShallowEqualSelector(state => state.convertDialog);\n\n    const handleClose = useCallback(() => {\n        dispatch(convertDialogActions.setVisible(false));\n    }, [dispatch]);\n\n    const handleChangeFormat = useCallback(\n        (ev, newFormat) => {\n            if (newFormat === null) {\n                return;\n            }\n            dispatch(convertDialogActions.setFormat(newFormat as string));\n        },\n        [dispatch]\n    );\n\n    const handleChangeTitleSource = useCallback(\n        (ev, newTitleSource) => {\n            if (newTitleSource === null) {\n                return;\n            }\n            dispatch(convertDialogActions.setTitleSource(newTitleSource));\n        },\n        [dispatch]\n    );\n\n    const handleChangeTitleFormat = useCallback(\n        (event: React.ChangeEvent<{ value: any }>) => {\n            dispatch(convertDialogActions.setTitleFormat(event.target.value));\n        },\n        [dispatch]\n    );\n\n    const handleConvert = useCallback(() => {\n        handleClose();\n        dispatch(convertAndUpload(props.files, format, titleSource, titleFormat));\n    }, [dispatch, props, format, titleSource, titleFormat]);\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'xs'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"convert-dialog-slide-title\"\n            aria-describedby=\"convert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"convert-dialog-slide-title\">Upload Settings</DialogTitle>\n            <DialogContent className={classes.dialogContent}>\n                <FormControl>\n                    <Typography component=\"label\" variant=\"caption\" color=\"textSecondary\">\n                        Recording Mode\n                    </Typography>\n                    <ToggleButtonGroup value={format} exclusive onChange={handleChangeFormat} size=\"small\">\n                        <ToggleButton className={classes.toggleButton} value=\"SP\">\n                            SP\n                        </ToggleButton>\n                        <ToggleButton className={classes.toggleButton} value=\"LP2\">\n                            LP2\n                        </ToggleButton>\n                        <ToggleButton className={classes.toggleButton} value=\"LP4\">\n                            LP4\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </FormControl>\n                <div className={classes.rightBlock}>\n                    <FormControl className={classes.formControl}>\n                        <Typography component=\"label\" variant=\"caption\" color=\"textSecondary\">\n                            Track title\n                        </Typography>\n                        <ToggleButtonGroup value={titleSource} exclusive onChange={handleChangeTitleSource} size=\"small\">\n                            <ToggleButton className={classes.toggleButton} value=\"file\">\n                                Filename\n                            </ToggleButton>\n                            <ToggleButton className={classes.toggleButton} value=\"media\">\n                                Media tags\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </FormControl>\n                    {titleSource === 'media' ? (\n                        <FormControl className={classes.titleFormControl}>\n                            <Select value={titleFormat} color=\"secondary\" input={<Input />} onChange={handleChangeTitleFormat}>\n                                <MenuItem value={`title`}>Title</MenuItem>\n                                <MenuItem value={`album-title`}>Album - Title</MenuItem>\n                                <MenuItem value={`artist-title`}>Artist - Title</MenuItem>\n                                <MenuItem value={`artist-album-title`}>Artist - Album - Title</MenuItem>\n                            </Select>\n                        </FormControl>\n                    ) : null}\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleConvert}>Ok</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"#000\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  fillRule: \"nonzero\"\n}, React.createElement(\"path\", {\n  d: \"M5.756 14.036l2.101 2.14c-2.173 2.135-3.623 4.401-4.303 6.721l-.101.367-2.906-.748c.776-3.013 2.552-5.872 5.209-8.48zM23.576 4.241l.902 2.861c-5.329 1.682-9.916 3.879-13.464 6.436l-.438.322-1.796-2.403c3.894-2.91 8.94-5.368 14.796-7.216zM47.825.5l.054 3c-6.79.122-13.336.962-19.288 2.445l-.846.216-.76-2.902C33.395 1.581 40.477.632 47.825.5zM92.67 14.036l-2.101 2.14c2.173 2.135 3.624 4.401 4.303 6.721l.101.367 2.906-.748c-.776-3.013-2.552-5.872-5.209-8.48zM74.85 4.241l-.902 2.861c5.329 1.682 9.916 3.879 13.464 6.436l.438.322 1.796-2.403c-3.893-2.91-8.94-5.368-14.796-7.216zM50.601.5l-.054 3c6.79.122 13.336.962 19.288 2.445l.846.216.76-2.902C65.031 1.581 57.95.632 50.601.5zM5.756 37.964l2.101-2.14c-2.173-2.135-3.623-4.401-4.303-6.721l-.101-.367-2.906.748c.776 3.013 2.552 5.872 5.209 8.48zM23.576 47.759l.902-2.861c-5.329-1.682-9.916-3.879-13.464-6.436l-.438-.322-1.796 2.403c3.894 2.91 8.94 5.368 14.796 7.216zM47.825 51.5l.054-3c-6.79-.122-13.336-.962-19.288-2.445l-.846-.216-.76 2.902c6.41 1.678 13.492 2.627 20.84 2.759zM92.67 37.964l-2.101-2.14c2.173-2.135 3.624-4.401 4.303-6.721l.101-.367 2.906.748c-.776 3.013-2.552 5.872-5.209 8.48zM74.85 47.759l-.902-2.861c5.329-1.682 9.916-3.879 13.464-6.436l.438-.322 1.796 2.403c-3.893 2.91-8.94 5.368-14.796 7.216zM50.601 51.5l-.054-3c6.79-.122 13.336-.962 19.288-2.445l.846-.216.76 2.902c-6.41 1.678-13.492 2.627-20.84 2.759z\"\n})), React.createElement(\"path\", {\n  d: \"M53.259 20.337c6.582-5.574 6.582-5.574 14.753-12.436C62.599 6.72 56.322 6 49.946 6c-6.485 0-12.82.747-18.303 1.966 6.675 5.894 7.084 6.191 14.006 12.252 3.48-.293 3.97-.293 7.61.12zM36.927 24.504c.992-1.544 2.25-2.448 5.124-3.474-5.486-4.744-7.34-6.324-14.003-12.173-11.485 3.264-19.33 9.02-20.049 15.647h28.928zM61.159 24.504c14.02 0 20.615 0 30.732-.004-.789-6.629-8.72-12.468-20.269-15.706-2.061 1.766-11.14 9.316-14.827 12.484 1.793.813 3.226 1.35 4.364 3.226zM40.996 30.602c-2.045-.884-3.476-1.935-4.042-3.102-1.056 0-26.431 0-28.782.039C9.53 33.6 16.924 38.847 27.455 41.964c4.236-3.528 8.255-6.948 13.541-11.362zM49.946 45c6.284 0 12.247-.64 17.6-1.79-4.721-4.135-7.729-6.721-13.454-11.689-3.681.692-6.213.59-9.6.068-4.888 4.125-10.974 9.218-13.473 11.324C36.707 44.248 43.137 45 49.946 45zM57.47 30.45c4.38 3.707 9.262 8.068 13.687 11.884 11.265-3.066 19.178-8.5 20.57-14.83H61.18c-.667.999-1.516 1.917-3.71 2.946z\"\n}));\n\nconst SvgMd0 = ({\n  svgRef,\n  title,\n  ...props\n}) => React.createElement(\"svg\", _extends({\n  width: 98,\n  height: 52,\n  viewBox: \"0 0 98 52\",\n  ref: svgRef\n}, props), title ? React.createElement(\"title\", null, title) : null, _ref);\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgMd0, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/md0.a7574f83.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"#000\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  fillRule: \"nonzero\"\n}, React.createElement(\"path\", {\n  d: \"M5.756 14.036l2.101 2.14c-2.173 2.135-3.623 4.401-4.303 6.721l-.101.367-2.906-.748c.776-3.013 2.552-5.872 5.209-8.48zM23.576 4.241l.902 2.861c-5.329 1.682-9.916 3.879-13.464 6.436l-.438.322-1.796-2.403c3.894-2.91 8.94-5.368 14.796-7.216zM47.825.5l.054 3c-6.79.122-13.336.962-19.288 2.445l-.846.216-.76-2.902C33.395 1.581 40.477.632 47.825.5zM92.67 14.036l-2.101 2.14c2.173 2.135 3.624 4.401 4.303 6.721l.101.367 2.906-.748c-.776-3.013-2.552-5.872-5.209-8.48zM74.85 4.241l-.902 2.861c5.329 1.682 9.916 3.879 13.464 6.436l.438.322 1.796-2.403c-3.893-2.91-8.94-5.368-14.796-7.216zM50.601.5l-.054 3c6.79.122 13.336.962 19.288 2.445l.846.216.76-2.902C65.031 1.581 57.95.632 50.601.5zM5.756 37.964l2.101-2.14c-2.173-2.135-3.623-4.401-4.303-6.721l-.101-.367-2.906.748c.776 3.013 2.552 5.872 5.209 8.48zM23.576 47.759l.902-2.861c-5.329-1.682-9.916-3.879-13.464-6.436l-.438-.322-1.796 2.403c3.894 2.91 8.94 5.368 14.796 7.216zM47.825 51.5l.054-3c-6.79-.122-13.336-.962-19.288-2.445l-.846-.216-.76 2.902c6.41 1.678 13.492 2.627 20.84 2.759zM92.67 37.964l-2.101-2.14c2.173-2.135 3.624-4.401 4.303-6.721l.101-.367 2.906.748c-.776 3.013-2.552 5.872-5.209 8.48zM74.85 47.759l-.902-2.861c5.329-1.682 9.916-3.879 13.464-6.436l.438-.322 1.796 2.403c-3.893 2.91-8.94 5.368-14.796 7.216zM50.601 51.5l-.054-3c6.79-.122 13.336-.962 19.288-2.445l.846-.216.76 2.902c-6.41 1.678-13.492 2.627-20.84 2.759z\"\n})), React.createElement(\"path\", {\n  d: \"M36.927 24.504c.992-1.544 2.25-2.448 5.124-3.474-5.486-4.744-7.34-6.324-14.003-12.173-11.485 3.264-19.33 9.02-20.049 15.647h28.928zM57.47 30.45c4.38 3.707 9.262 8.068 13.687 11.884 11.265-3.066 19.178-8.5 20.57-14.83H61.18c-.667.999-1.516 1.917-3.71 2.946z\"\n}));\n\nconst SvgMd1 = ({\n  svgRef,\n  title,\n  ...props\n}) => React.createElement(\"svg\", _extends({\n  width: 98,\n  height: 52,\n  viewBox: \"0 0 98 52\",\n  ref: svgRef\n}, props), title ? React.createElement(\"title\", null, title) : null, _ref);\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgMd1, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/md1.1ffb5f6c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"#000\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  fillRule: \"nonzero\"\n}, React.createElement(\"path\", {\n  d: \"M5.756 14.036l2.101 2.14c-2.173 2.135-3.623 4.401-4.303 6.721l-.101.367-2.906-.748c.776-3.013 2.552-5.872 5.209-8.48zM23.576 4.241l.902 2.861c-5.329 1.682-9.916 3.879-13.464 6.436l-.438.322-1.796-2.403c3.894-2.91 8.94-5.368 14.796-7.216zM47.825.5l.054 3c-6.79.122-13.336.962-19.288 2.445l-.846.216-.76-2.902C33.395 1.581 40.477.632 47.825.5zM92.67 14.036l-2.101 2.14c2.173 2.135 3.624 4.401 4.303 6.721l.101.367 2.906-.748c-.776-3.013-2.552-5.872-5.209-8.48zM74.85 4.241l-.902 2.861c5.329 1.682 9.916 3.879 13.464 6.436l.438.322 1.796-2.403c-3.893-2.91-8.94-5.368-14.796-7.216zM50.601.5l-.054 3c6.79.122 13.336.962 19.288 2.445l.846.216.76-2.902C65.031 1.581 57.95.632 50.601.5zM5.756 37.964l2.101-2.14c-2.173-2.135-3.623-4.401-4.303-6.721l-.101-.367-2.906.748c.776 3.013 2.552 5.872 5.209 8.48zM23.576 47.759l.902-2.861c-5.329-1.682-9.916-3.879-13.464-6.436l-.438-.322-1.796 2.403c3.894 2.91 8.94 5.368 14.796 7.216zM47.825 51.5l.054-3c-6.79-.122-13.336-.962-19.288-2.445l-.846-.216-.76 2.902c6.41 1.678 13.492 2.627 20.84 2.759zM92.67 37.964l-2.101-2.14c2.173-2.135 3.624-4.401 4.303-6.721l.101-.367 2.906.748c-.776 3.013-2.552 5.872-5.209 8.48zM74.85 47.759l-.902-2.861c5.329-1.682 9.916-3.879 13.464-6.436l.438-.322 1.796 2.403c-3.893 2.91-8.94 5.368-14.796 7.216zM50.601 51.5l-.054-3c6.79-.122 13.336-.962 19.288-2.445l.846-.216.76 2.902c-6.41 1.678-13.492 2.627-20.84 2.759z\"\n})), React.createElement(\"path\", {\n  d: \"M53.259 20.337c6.582-5.574 6.582-5.574 14.753-12.436C62.599 6.72 56.322 6 49.946 6c-6.485 0-12.82.747-18.303 1.966 6.675 5.894 7.084 6.191 14.006 12.252 3.48-.293 3.97-.293 7.61.12zM49.946 45c6.284 0 12.247-.64 17.6-1.79-4.721-4.135-7.729-6.721-13.454-11.689-3.681.692-6.213.59-9.6.068-4.888 4.125-10.974 9.218-13.473 11.324C36.707 44.248 43.137 45 49.946 45z\"\n}));\n\nconst SvgMd2 = ({\n  svgRef,\n  title,\n  ...props\n}) => React.createElement(\"svg\", _extends({\n  width: 98,\n  height: 52,\n  viewBox: \"0 0 98 52\",\n  ref: svgRef\n}, props), title ? React.createElement(\"title\", null, title) : null, _ref);\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgMd2, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/md2.33dd03b3.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"#000\",\n  fillRule: \"evenodd\"\n}, React.createElement(\"g\", {\n  fillRule: \"nonzero\"\n}, React.createElement(\"path\", {\n  d: \"M5.756 14.036l2.101 2.14c-2.173 2.135-3.623 4.401-4.303 6.721l-.101.367-2.906-.748c.776-3.013 2.552-5.872 5.209-8.48zM23.576 4.241l.902 2.861c-5.329 1.682-9.916 3.879-13.464 6.436l-.438.322-1.796-2.403c3.894-2.91 8.94-5.368 14.796-7.216zM47.825.5l.054 3c-6.79.122-13.336.962-19.288 2.445l-.846.216-.76-2.902C33.395 1.581 40.477.632 47.825.5zM92.67 14.036l-2.101 2.14c2.173 2.135 3.624 4.401 4.303 6.721l.101.367 2.906-.748c-.776-3.013-2.552-5.872-5.209-8.48zM74.85 4.241l-.902 2.861c5.329 1.682 9.916 3.879 13.464 6.436l.438.322 1.796-2.403c-3.893-2.91-8.94-5.368-14.796-7.216zM50.601.5l-.054 3c6.79.122 13.336.962 19.288 2.445l.846.216.76-2.902C65.031 1.581 57.95.632 50.601.5zM5.756 37.964l2.101-2.14c-2.173-2.135-3.623-4.401-4.303-6.721l-.101-.367-2.906.748c.776 3.013 2.552 5.872 5.209 8.48zM23.576 47.759l.902-2.861c-5.329-1.682-9.916-3.879-13.464-6.436l-.438-.322-1.796 2.403c3.894 2.91 8.94 5.368 14.796 7.216zM47.825 51.5l.054-3c-6.79-.122-13.336-.962-19.288-2.445l-.846-.216-.76 2.902c6.41 1.678 13.492 2.627 20.84 2.759zM92.67 37.964l-2.101-2.14c2.173-2.135 3.624-4.401 4.303-6.721l.101-.367 2.906.748c-.776 3.013-2.552 5.872-5.209 8.48zM74.85 47.759l-.902-2.861c5.329-1.682 9.916-3.879 13.464-6.436l.438-.322 1.796 2.403c-3.893 2.91-8.94 5.368-14.796 7.216zM50.601 51.5l-.054-3c6.79-.122 13.336-.962 19.288-2.445l.846-.216.76 2.902c-6.41 1.678-13.492 2.627-20.84 2.759z\"\n})), React.createElement(\"path\", {\n  d: \"M61.159 24.504c14.02 0 20.615 0 30.732-.004-.789-6.629-8.72-12.468-20.269-15.706-2.061 1.766-11.14 9.316-14.827 12.484 1.793.813 3.226 1.35 4.364 3.226zM40.996 30.602c-2.045-.884-3.476-1.935-4.042-3.102-1.056 0-26.431 0-28.782.039C9.53 33.6 16.924 38.847 27.455 41.964c4.236-3.528 8.255-6.948 13.541-11.362z\"\n}));\n\nconst SvgMd3 = ({\n  svgRef,\n  title,\n  ...props\n}) => React.createElement(\"svg\", _extends({\n  width: 98,\n  height: 52,\n  viewBox: \"0 0 98 52\",\n  ref: svgRef\n}, props), title ? React.createElement(\"title\", null, title) : null, _ref);\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgMd3, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/md3.80f42826.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useRef, useEffect, useState } from 'react';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Box from '@material-ui/core/Box';\n\nimport { makeStyles } from '@material-ui/core';\nimport { belowDesktop, getSortedTracks, useShallowEqualSelector } from '../utils';\nimport { control } from '../redux/actions';\nimport { shallowEqual, useDispatch } from 'react-redux';\n\nimport { ReactComponent as MDIcon0 } from '../images/md0.svg';\nimport { ReactComponent as MDIcon1 } from '../images/md1.svg';\nimport { ReactComponent as MDIcon2 } from '../images/md2.svg';\nimport { ReactComponent as MDIcon3 } from '../images/md3.svg';\n\nconst frames = [MDIcon0, MDIcon1, MDIcon2, MDIcon3];\n\nconst useStyles = makeStyles(theme => ({\n    '@keyframes scrollLeft': {\n        from: {\n            transform: `translateX(0%)`,\n        },\n        to: {},\n    },\n    container: {\n        display: 'flex',\n        flex: '1 1 auto',\n        [belowDesktop(theme)]: {\n            flexWrap: 'wrap',\n        },\n    },\n    lcd: {\n        flex: '1 1 auto',\n        position: 'relative',\n        marginLeft: theme.spacing(1.5),\n        marginRight: theme.spacing(1.5),\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n        borderRadius: theme.spacing(3),\n        backgroundColor: theme.palette.background.default,\n        minWidth: 150,\n        height: 48,\n        [belowDesktop(theme)]: {\n            marginLeft: 0,\n            marginRight: theme.spacing(2),\n        },\n    },\n    lcdText: {\n        overflow: 'hidden',\n        position: 'relative',\n        width: 'calc(100% - 40px)',\n        left: 40,\n        height: '100%',\n        fontFamily: 'LCDDot',\n    },\n    lcdDisc: {\n        position: 'absolute',\n        top: 0,\n        left: 20,\n    },\n    lcdDiscIcon: {\n        width: 28,\n        height: 48,\n        '& g': {\n            fill: theme.palette.action.active,\n        },\n    },\n    scrollingStatusMessage: {\n        position: 'absolute',\n        width: '100%',\n        whiteSpace: 'nowrap',\n        animationName: '$scrollLeft',\n        animationTimingFunction: 'linear',\n        animationIterationCount: '1',\n        top: 15,\n        left: 1,\n    },\n    statusMessage: {\n        position: 'absolute',\n        width: '100%',\n        whiteSpace: 'nowrap',\n        top: 15,\n        left: 1,\n    },\n    button: {\n        // padding: 8,\n    },\n}));\n\nexport const Controls = () => {\n    const dispatch = useDispatch();\n    // TODO: The shallow equality won't work for these 2 states\n    const deviceStatus = useShallowEqualSelector(state => state.main.deviceStatus);\n    const disc = useShallowEqualSelector(state => state.main.disc);\n\n    const classes = useStyles();\n    const handlePrev = useCallback(() => {\n        dispatch(control('prev'));\n    }, [dispatch]);\n    const handlePlay = useCallback(() => {\n        dispatch(control('play'));\n    }, [dispatch]);\n    const handleStop = useCallback(() => {\n        dispatch(control('stop'));\n    }, [dispatch]);\n    const handleNext = useCallback(() => {\n        dispatch(control('next'));\n    }, [dispatch]);\n\n    let message = ``;\n    let trackIndex = deviceStatus?.track ?? null;\n    let deviceState = deviceStatus?.state ?? null;\n    let discPresent = deviceStatus?.discPresent ?? false;\n    const tracks = getSortedTracks(disc);\n    if (!discPresent) {\n        message = ``;\n    } else if (deviceState === 'readingTOC') {\n        message = 'READING TOC';\n    } else if (tracks.length === 0) {\n        message = `BLANKDISC`;\n    } else if (deviceStatus && deviceStatus.track !== null) {\n        message = `${deviceStatus.track + 1} - ` + tracks[deviceStatus.track].title;\n    }\n\n    const [lcdScroll, setLcdScroll] = useState(0);\n    const [lcdScrollDuration, setLcdScrollDuration] = useState(0);\n    const [lcdIconFrame, setLcdIconFrame] = useState(0);\n\n    // LCD Text scrolling\n    const animationDelayInMS = 2000;\n    const scrollTimerRef = useRef<any>(null);\n    const lcdRef = useRef<HTMLParagraphElement>(null);\n    useEffect(() => {\n        const updateLCDScroll = () => {\n            const domEl = lcdRef.current;\n            const textWidth = domEl?.scrollWidth ?? 0;\n            const lcdWidth = domEl?.parentElement?.offsetWidth ?? 0;\n            const scrollPerc = textWidth > lcdWidth ? (textWidth * 100) / lcdWidth : 0;\n            const scrollDurationInSec = textWidth > lcdWidth ? textWidth / 20 : 0; // Compute duration to achieve constant speed\n            setLcdScroll(scrollPerc);\n            setLcdScrollDuration(scrollDurationInSec);\n            if (scrollDurationInSec > 0) {\n                scrollTimerRef.current = setTimeout(() => {\n                    setLcdScroll(0);\n                }, scrollDurationInSec * 1000 + 500); // stop animation timer\n            }\n        };\n\n        clearTimeout(scrollTimerRef.current);\n        setLcdScroll(0);\n        scrollTimerRef.current = setTimeout(() => {\n            updateLCDScroll();\n        }, animationDelayInMS); // start animation timer\n\n        return () => {\n            clearTimeout(scrollTimerRef.current); // clear all the timers on unmount\n        };\n    }, [trackIndex, deviceState, message]);\n\n    // Disc animation\n    const lcdIconAnimationTimer = useRef<any>(null);\n    useEffect(() => {\n        clearInterval(lcdIconAnimationTimer.current);\n        if (deviceState === 'playing' || deviceState === 'readingTOC') {\n            lcdIconAnimationTimer.current = setInterval(() => {\n                setLcdIconFrame(1 + (lcdIconFrame % (frames.length - 1)));\n            }, 600);\n        } else {\n            setLcdIconFrame(0);\n        }\n        return () => {\n            clearInterval(lcdIconAnimationTimer.current);\n        };\n    }, [deviceState, lcdIconFrame]);\n\n    const DiscFrame = frames[lcdIconFrame];\n    return (\n        <Box className={classes.container}>\n            <IconButton aria-label=\"prev\" onClick={handlePrev} className={classes.button}>\n                <SkipPreviousIcon />\n            </IconButton>\n            <IconButton aria-label=\"play\" onClick={handlePlay} className={classes.button}>\n                <PlayArrowIcon />\n            </IconButton>\n            <IconButton aria-label=\"stop\" onClick={handleStop} className={classes.button}>\n                <StopIcon />\n            </IconButton>\n            <IconButton aria-label=\"next\" onClick={handleNext} className={classes.button}>\n                <SkipNextIcon />\n            </IconButton>\n            <div className={classes.lcd}>\n                <div className={classes.lcdText}>\n                    <span\n                        className={lcdScroll ? classes.scrollingStatusMessage : classes.statusMessage}\n                        ref={lcdRef}\n                        style={\n                            message && lcdScroll > 0\n                                ? { animationDuration: `${lcdScrollDuration}s`, transform: `translate(-${lcdScroll}%)` }\n                                : {}\n                        }\n                    >\n                        {message}\n                    </span>\n                </div>\n                <div className={classes.lcdDisc}>{discPresent && <DiscFrame className={classes.lcdDiscIcon} />}</div>\n            </div>\n        </Box>\n    );\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { recordTracks } from '../redux/actions';\nimport { actions as dumpDialogActions } from '../redux/dump-dialog-feature';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { Controls } from './controls';\nimport Box from '@material-ui/core/Box';\nimport serviceRegistry from '../services/registry';\nimport { TransitionProps } from '@material-ui/core/transitions';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>\n) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-end',\n        justifyContent: 'space-between',\n        marginRight: -theme.spacing(2),\n        flexFlow: 'wrap',\n    },\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    head: {\n        textShadow: '0px 0px 12px rgba(150, 150, 150, 1)',\n        fontSize: theme.typography.h2.fontSize,\n        textAlign: 'center',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\nexport const DumpDialog = ({ trackIndexes }: { trackIndexes: number[] }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const [devices, setDevices] = useState<{ deviceId: string; label: string }[]>([]);\n    const [inputDeviceId, setInputDeviceId] = useState<string>('');\n\n    let { visible } = useShallowEqualSelector(state => state.dumpDialog);\n\n    const handleClose = useCallback(() => {\n        setInputDeviceId('');\n        serviceRegistry.mediaRecorderService?.stopTestInput();\n        dispatch(dumpDialogActions.setVisible(false));\n    }, [dispatch]);\n\n    const handleChange = useCallback(\n        (ev: React.ChangeEvent<{ value: unknown }>) => {\n            const deviceId = ev.target.value as string;\n            setInputDeviceId(deviceId);\n            serviceRegistry.mediaRecorderService?.stopTestInput();\n            serviceRegistry.mediaRecorderService?.playTestInput(deviceId);\n        },\n        [setInputDeviceId]\n    );\n\n    const handleStartTransfer = useCallback(() => {\n        dispatch(recordTracks(trackIndexes, inputDeviceId));\n        handleClose();\n    }, [trackIndexes, inputDeviceId, dispatch, handleClose]);\n\n    useEffect(() => {\n        async function updateDeviceList() {\n            await navigator.mediaDevices.getUserMedia({ audio: true });\n            let devices = await navigator.mediaDevices.enumerateDevices();\n            let inputDevices = devices\n                .filter(device => device.kind === 'audioinput')\n                .map(device => ({ deviceId: device.deviceId, label: device.label }));\n            setDevices(inputDevices);\n        }\n        if (visible) {\n            updateDeviceList();\n        }\n    }, [visible, setDevices]);\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"dump-dialog-slide-title\"\n            aria-describedby=\"dump-dialog-slide-description\"\n        >\n            <DialogTitle id=\"dump-dialog-slide-title\">Record Selected Tracks</DialogTitle>\n            <DialogContent>\n                <Typography component=\"p\" variant=\"h2\" className={classes.head}>\n                    {`💻 ⬅ 💽`}\n                </Typography>\n                <Typography component=\"p\" variant=\"body2\">\n                    1. Connect your MD Player line-out to your PC audio line-in.\n                </Typography>\n                <Typography component=\"p\" variant=\"body2\">\n                    2. Use the controls at the bottom right to play some tracks.\n                </Typography>\n                <Typography component=\"p\" variant=\"body2\">\n                    3. Select the input source. You should hear the tracks playing on your PC.\n                </Typography>\n                <Typography component=\"p\" variant=\"body2\">\n                    4. Adjust the input gain and the line-out volume of your device.\n                </Typography>\n                <Box className={classes.container}>\n                    <FormControl className={classes.formControl}>\n                        <Select value={inputDeviceId} onChange={handleChange} displayEmpty className={classes.selectEmpty}>\n                            <MenuItem value=\"\" disabled>\n                                Input Source\n                            </MenuItem>\n                            {devices.map(device => (\n                                <MenuItem key={device.deviceId} value={device.deviceId}>\n                                    {device.label}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>Input Source</FormHelperText>\n                    </FormControl>\n                    <Controls />\n                </Box>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleStartTransfer} disabled={inputDeviceId === ''}>\n                    Start Record\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport { listContent, deleteTracks, moveTrack } from '../redux/actions';\nimport { actions as renameDialogActions } from '../redux/rename-dialog-feature';\nimport { actions as convertDialogActions } from '../redux/convert-dialog-feature';\nimport { actions as dumpDialogActions } from '../redux/dump-dialog-feature';\n\nimport { formatTimeFromFrames, getTracks } from 'netmd-js';\n\nimport { belowDesktop, forAnyDesktop, getSortedTracks, useShallowEqualSelector } from '../utils';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { batchActions } from 'redux-batched-actions';\n\nimport { RenameDialog } from './rename-dialog';\nimport { UploadDialog } from './upload-dialog';\nimport { RecordDialog } from './record-dialog';\nimport { ErrorDialog } from './error-dialog';\nimport { PanicDialog } from './panic-dialog';\nimport { ConvertDialog } from './convert-dialog';\nimport { AboutDialog } from './about-dialog';\nimport { DumpDialog } from './dump-dialog';\nimport { TopMenu } from './topmenu';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport * as BadgeImpl from '@material-ui/core/Badge/Badge';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles(theme => ({\n    add: {\n        position: 'absolute',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n        [belowDesktop(theme)]: {\n            bottom: theme.spacing(2),\n        },\n    },\n    main: {\n        overflowY: 'auto',\n        flex: '1 1 auto',\n        marginBottom: theme.spacing(3),\n        outline: 'none',\n        marginLeft: theme.spacing(-1),\n        marginRight: theme.spacing(-1),\n        [forAnyDesktop(theme)]: {\n            marginLeft: theme.spacing(-2),\n            marginRight: theme.spacing(-2),\n        },\n    },\n    toolbar: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(-2),\n        marginRight: theme.spacing(-2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            marginLeft: theme.spacing(-3),\n            marginRight: theme.spacing(-3),\n        },\n    },\n    toolbarLabel: {\n        flex: '1 1 100%',\n    },\n    toolbarHighlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    headBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    spacing: {\n        marginTop: theme.spacing(1),\n    },\n    formatBadge: {\n        ...(BadgeImpl as any).styles(theme).badge,\n        ...(BadgeImpl as any).styles(theme).colorPrimary,\n        position: 'static',\n        display: 'inline-flex',\n        border: `2px solid ${theme.palette.background.paper}`,\n        padding: '0 4px',\n        verticalAlign: 'middle',\n        width: theme.spacing(4.5),\n        marginRight: theme.spacing(0.5),\n    },\n    titleCell: {\n        overflow: 'hidden',\n        maxWidth: '40ch',\n        textOverflow: 'ellipsis',\n        // whiteSpace: 'nowrap',\n    },\n    durationCell: {\n        whiteSpace: 'nowrap',\n    },\n    durationCellTime: {\n        verticalAlign: 'middle',\n    },\n    indexCell: {\n        whiteSpace: 'nowrap',\n        paddingRight: 0,\n        width: `2ch`,\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    remainingTimeTooltip: {\n        textDecoration: 'underline',\n        textDecorationStyle: 'dotted',\n    },\n}));\n\nexport const Main = (props: {}) => {\n    let dispatch = useDispatch();\n    let disc = useShallowEqualSelector(state => state.main.disc);\n    let deviceName = useShallowEqualSelector(state => state.main.deviceName);\n\n    const [selected, setSelected] = React.useState<number[]>([]);\n    const selectedCount = selected.length;\n\n    const [moveMenuAnchorEl, setMoveMenuAnchorEl] = React.useState<null | HTMLElement>(null);\n    const handleShowMoveMenu = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n        setMoveMenuAnchorEl(event.currentTarget);\n    }, []);\n    const handleCloseMoveMenu = useCallback(() => {\n        setMoveMenuAnchorEl(null);\n    }, []);\n    const handleMoveSelectedTrack = useCallback(\n        (destIndex: number) => {\n            dispatch(moveTrack(selected[0], destIndex));\n            handleCloseMoveMenu();\n        },\n        [dispatch, selected, handleCloseMoveMenu]\n    );\n\n    const handleShowDumpDialog = useCallback(() => {\n        dispatch(dumpDialogActions.setVisible(true));\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(listContent());\n    }, [dispatch]);\n\n    useEffect(() => {\n        setSelected([]); // Reset selection if disc changes\n    }, [disc]);\n\n    let [uploadedFiles, setUploadedFiles] = React.useState<File[]>([]);\n    const onDrop = useCallback(\n        (acceptedFiles: File[], rejectedFiles: File[]) => {\n            setUploadedFiles(acceptedFiles);\n            dispatch(convertDialogActions.setVisible(true));\n        },\n        [dispatch]\n    );\n    const { getRootProps, getInputProps, isDragActive, open } = useDropzone({\n        onDrop,\n        accept: [`audio/*`, `video/mp4`],\n        noClick: true,\n    });\n\n    const classes = useStyles();\n    const tracks = getSortedTracks(disc);\n\n    // Action Handlers\n    const handleSelectClick = (event: React.MouseEvent, item: number) => {\n        if (selected.includes(item)) {\n            setSelected(selected.filter(i => i !== item));\n        } else {\n            setSelected([...selected, item]);\n        }\n    };\n\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (selected.length < tracks.length) {\n            setSelected(tracks.map(t => t.index));\n        } else {\n            setSelected([]);\n        }\n    };\n\n    const handleRenameDoubleClick = (event: React.MouseEvent, item: number) => {\n        let selectedIndex = item;\n        let currentName = getTracks(disc!).find(track => track.index === selectedIndex)?.title ?? '';\n\n        dispatch(\n            batchActions([\n                renameDialogActions.setVisible(true),\n                renameDialogActions.setCurrentName(currentName),\n                renameDialogActions.setIndex(selectedIndex),\n            ])\n        );\n    };\n\n    const handleRenameActionClick = (event: React.MouseEvent) => {\n        handleRenameDoubleClick(event, selected[0]);\n    };\n\n    const handleDeleteSelected = (event: React.MouseEvent) => {\n        dispatch(deleteTracks(selected));\n    };\n\n    return (\n        <React.Fragment>\n            <Box className={classes.headBox}>\n                <Typography component=\"h1\" variant=\"h4\">\n                    {deviceName || `Loading...`}\n                </Typography>\n                <TopMenu />\n            </Box>\n            <Typography component=\"h2\" variant=\"body2\">\n                {disc !== null ? (\n                    <React.Fragment>\n                        <span>{`${formatTimeFromFrames(disc.left, false)} left of ${formatTimeFromFrames(disc.total, false)} `}</span>\n                        <Tooltip\n                            title={\n                                <React.Fragment>\n                                    <span>{`${formatTimeFromFrames(disc.left * 2, false)} left in LP2 Mode`}</span>\n                                    <br />\n                                    <span>{`${formatTimeFromFrames(disc.left * 4, false)} left in LP4 Mode`}</span>\n                                </React.Fragment>\n                            }\n                            arrow\n                        >\n                            <span className={classes.remainingTimeTooltip}>SP Mode</span>\n                        </Tooltip>\n                    </React.Fragment>\n                ) : (\n                    `Loading...`\n                )}\n            </Typography>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.toolbarHighlight]: selectedCount > 0,\n                })}\n            >\n                {selectedCount > 0 ? (\n                    <Checkbox\n                        indeterminate={selectedCount > 0 && selectedCount < tracks.length}\n                        checked={selectedCount > 0}\n                        onChange={handleSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all tracks' }}\n                    />\n                ) : null}\n                {selectedCount > 0 ? (\n                    <Typography className={classes.toolbarLabel} color=\"inherit\" variant=\"subtitle1\">\n                        {selectedCount} selected\n                    </Typography>\n                ) : (\n                    <Typography component=\"h3\" variant=\"h6\" className={classes.toolbarLabel}>\n                        {disc?.title || `Untitled Disc`}\n                    </Typography>\n                )}\n                {selectedCount === 1 ? (\n                    <React.Fragment>\n                        <Tooltip title=\"Move to Position\">\n                            <Button aria-controls=\"move-menu\" aria-label=\"Move\" onClick={handleShowMoveMenu}>\n                                Move\n                            </Button>\n                        </Tooltip>\n                        <Menu\n                            id=\"move-menu\"\n                            anchorEl={moveMenuAnchorEl}\n                            open={!!moveMenuAnchorEl}\n                            onClose={handleCloseMoveMenu}\n                            PaperProps={{\n                                style: {\n                                    maxHeight: 300,\n                                },\n                            }}\n                        >\n                            {Array(tracks.length)\n                                .fill(null)\n                                .map((_, i) => {\n                                    return (\n                                        <MenuItem key={`pos-${i}`} onClick={() => handleMoveSelectedTrack(i)}>\n                                            {i + 1}\n                                        </MenuItem>\n                                    );\n                                })}\n                        </Menu>\n                    </React.Fragment>\n                ) : null}\n\n                {selectedCount > 0 ? (\n                    <React.Fragment>\n                        <Tooltip title=\"Record from MD\">\n                            <Button aria-label=\"Record\" onClick={handleShowDumpDialog}>\n                                Record\n                            </Button>\n                        </Tooltip>\n                    </React.Fragment>\n                ) : null}\n\n                {selectedCount > 0 ? (\n                    <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\" onClick={handleDeleteSelected}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : null}\n\n                {selectedCount > 0 ? (\n                    <Tooltip title=\"Rename\">\n                        <IconButton aria-label=\"rename\" disabled={selectedCount !== 1} onClick={handleRenameActionClick}>\n                            <EditIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : null}\n            </Toolbar>\n            <Box className={classes.main} {...getRootProps()}>\n                <input {...getInputProps()} />\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell className={classes.indexCell}>#</TableCell>\n                            <TableCell>Title</TableCell>\n                            <TableCell align=\"right\">Duration</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tracks.map(track => (\n                            <TableRow\n                                hover\n                                selected={selected.includes(track.index)}\n                                key={track.index}\n                                onDoubleClick={event => handleRenameDoubleClick(event, track.index)}\n                                onClick={event => handleSelectClick(event, track.index)}\n                            >\n                                <TableCell className={classes.indexCell}>{track.index + 1}</TableCell>\n                                <TableCell className={classes.titleCell} title={track.title}>\n                                    {track.title || `No Title`}\n                                </TableCell>\n                                <TableCell align=\"right\" className={classes.durationCell}>\n                                    <span className={classes.formatBadge}>{track.encoding}</span>\n                                    <span className={classes.durationCellTime}>{track.duration}</span>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Backdrop className={classes.backdrop} open={isDragActive}>\n                    Drop your Music to Upload\n                </Backdrop>\n            </Box>\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.add} onClick={open}>\n                <AddIcon />\n            </Fab>\n\n            <UploadDialog />\n            <RenameDialog />\n            <ErrorDialog />\n            <ConvertDialog files={uploadedFiles} />\n            <RecordDialog />\n            <DumpDialog trackIndexes={selected} />\n            <AboutDialog />\n            <PanicDialog />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { belowDesktop, forAnyDesktop, forWideDesktop, useShallowEqualSelector } from '../utils';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport { Welcome } from './welcome';\nimport { Main } from './main';\nimport { Controls } from './controls';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: 'auto',\n        height: '100%',\n        [forAnyDesktop(theme)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        [forWideDesktop(theme)]: {\n            width: 700,\n        },\n    },\n\n    paper: {\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2),\n        height: 'calc(100% - 20px)',\n        [forAnyDesktop(theme)]: {\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(1),\n            padding: theme.spacing(3),\n            height: 600,\n        },\n        [forWideDesktop(theme)]: {\n            height: 700,\n        },\n    },\n    bottomBar: {\n        display: 'flex',\n        alignItems: 'center',\n        [belowDesktop(theme)]: {\n            flexWrap: 'wrap',\n        },\n        marginLeft: -theme.spacing(2),\n    },\n    copyrightTypography: {\n        marginRight: theme.spacing(1),\n        textAlign: 'center',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    minidiscLogo: {\n        width: 48,\n    },\n    controlsContainer: {\n        flex: '0 0 auto',\n        width: '100%',\n        paddingRight: theme.spacing(8),\n        [belowDesktop(theme)]: {\n            paddingLeft: 0,\n        },\n    },\n}));\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#6ec6ff',\n            main: '#2196f3',\n            dark: '#0069c0',\n            contrastText: '#fff',\n        },\n    },\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        type: 'light',\n    },\n});\n\nconst App = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    let { mainView, loading, darkMode } = useShallowEqualSelector(state => state.appState);\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n                <CssBaseline />\n\n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        {mainView === 'WELCOME' ? <Welcome /> : null}\n                        {mainView === 'MAIN' ? <Main /> : null}\n\n                        <Box className={classes.controlsContainer}>{mainView === 'MAIN' ? <Controls /> : null}</Box>\n                    </Paper>\n                    <Typography variant=\"body2\" color=\"textSecondary\" className={classes.copyrightTypography}>\n                        {'© '}\n                        <Link rel=\"noopener noreferrer\" color=\"inherit\" target=\"_blank\" href=\"https://stefano.brilli.me/\">\n                            Stefano Brilli\n                        </Link>{' '}\n                        {new Date().getFullYear()}\n                        {'.'}\n                    </Typography>\n                </main>\n\n                <Backdrop className={classes.backdrop} open={loading}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","/* eslint no-restricted-globals: 0 */\nimport { getPublicPathFor } from '../utils';\nexport class AtracdencProcess {\n    private messageCallback?: (ev: MessageEvent) => void;\n\n    constructor(public worker: Worker) {\n        worker.onmessage = this.handleMessage.bind(this);\n    }\n\n    async init() {\n        await new Promise<MessageEvent>(resolve => {\n            this.messageCallback = resolve;\n            this.worker.postMessage({ action: 'init' });\n        });\n    }\n\n    async encode(data: ArrayBuffer, bitrate: string) {\n        let eventData = await new Promise<MessageEvent>(resolve => {\n            this.messageCallback = resolve;\n            this.worker.postMessage({ action: 'encode', bitrate, data }, [data]);\n        });\n        return eventData.data.result as Uint8Array;\n    }\n\n    terminate() {\n        this.worker.terminate();\n    }\n\n    handleMessage(ev: MessageEvent) {\n        this.messageCallback!(ev);\n        this.messageCallback = undefined;\n    }\n}\n\nif (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n    // Worker\n    let Module: any;\n    onmessage = async (ev: MessageEvent) => {\n        const { action, ...others } = ev.data;\n        if (action === 'init') {\n            self.importScripts(getPublicPathFor(`atracdenc.js`));\n            (self as any).Module().then((m: any) => {\n                Module = m;\n                self.postMessage({ action: 'init' });\n                Module.setLogger && Module.setLogger((msg: string, stream: string) => console.log(`${stream}: ${msg}`));\n            });\n        } else if (action === 'encode') {\n            const { bitrate, data } = others;\n            const inWavFile = `inWavFile.wav`;\n            const outAt3File = `outAt3File.aea`;\n            const dataArray = new Uint8Array(data);\n            Module.FS.writeFile(`${inWavFile}`, dataArray);\n            Module.callMain([`-e`, `atrac3`, `-i`, inWavFile, `-o`, outAt3File, `--bitrate`, bitrate]);\n\n            // Read file and trim header (96 bytes)\n            let fileStat = Module.FS.stat(outAt3File);\n            let size = fileStat.size;\n            let tmp = new Uint8Array(size - 96);\n            let outAt3FileStream = Module.FS.open(outAt3File, 'r');\n            Module.FS.read(outAt3FileStream, tmp, 0, tmp.length, 96);\n            Module.FS.close(outAt3FileStream);\n\n            let result = tmp.buffer;\n\n            self.postMessage(\n                {\n                    action: 'encode',\n                    result,\n                },\n                [result]\n            );\n        }\n    };\n} else {\n    // Main\n}\n","import { createWorker, setLogging } from '@ffmpeg/ffmpeg';\nimport { AtracdencProcess } from './atracdenc-worker';\nimport { getPublicPathFor } from '../utils';\nconst AtracdencWorker = require('worker-loader!./atracdenc-worker'); // eslint-disable-line import/no-webpack-loader-syntax\n\ninterface LogPayload {\n    message: string;\n    action: string;\n}\n\nexport interface AudioExportService {\n    init(): Promise<void>;\n    export(params: { format: string }): Promise<ArrayBuffer>;\n    info(): Promise<{ format: string | null; input: string | null }>;\n    prepare(file: File): Promise<void>;\n}\n\nexport class FFMpegAudioExportService implements AudioExportService {\n    public ffmpegProcess: any;\n    public atracdencProcess?: AtracdencProcess;\n    public loglines: { action: string; message: string }[] = [];\n    public inFileName: string = ``;\n    public outFileNameNoExt: string = ``;\n\n    async init() {\n        setLogging(true);\n    }\n\n    async prepare(file: File) {\n        this.loglines = [];\n        this.ffmpegProcess = createWorker({\n            logger: (payload: LogPayload) => {\n                this.loglines.push(payload);\n                console.log(payload.action, payload.message);\n            },\n            corePath: getPublicPathFor('ffmpeg-core.js'),\n            workerPath: getPublicPathFor('worker.min.js'),\n        });\n        await this.ffmpegProcess.load();\n\n        this.atracdencProcess = new AtracdencProcess(new AtracdencWorker());\n        await this.atracdencProcess.init();\n\n        let ext = file.name.split('.').slice(-1);\n        if (ext.length === 0) {\n            throw new Error(`Unrecognized file format: ${file.name}`);\n        }\n\n        this.inFileName = `inAudioFile.${ext[0]}`;\n        this.outFileNameNoExt = `outAudioFile`;\n\n        await this.ffmpegProcess.write(this.inFileName, file);\n    }\n\n    async info() {\n        await this.ffmpegProcess.transcode(this.inFileName, `${this.outFileNameNoExt}.metadata`, `-f ffmetadata`);\n\n        let audioFormatRegex = /Audio:\\s(.*?),/; // Actual content\n        let inputFormatRegex = /Input #0,\\s(.*?),/; // Container\n        let format: string | null = null;\n        let input: string | null = null;\n\n        for (let line of this.loglines) {\n            let match = line.message.match(audioFormatRegex);\n            if (match !== null) {\n                format = match[1];\n                continue;\n            }\n            match = line.message.match(inputFormatRegex);\n            if (match !== null) {\n                input = match[1];\n                continue;\n            }\n            if (format !== null && input !== null) {\n                break;\n            }\n        }\n\n        return { format, input };\n    }\n\n    async export({ format }: { format: string }) {\n        let result: ArrayBuffer;\n        if (format === `SP`) {\n            const outFileName = `${this.outFileNameNoExt}.raw`;\n            await this.ffmpegProcess.transcode(this.inFileName, outFileName, '-f s16be -ar 44100');\n            let { data } = await this.ffmpegProcess.read(outFileName);\n            result = data.buffer;\n        } else {\n            const outFileName = `${this.outFileNameNoExt}.wav`;\n            await this.ffmpegProcess.transcode(this.inFileName, outFileName, '-f wav -ar 44100');\n            let { data } = await this.ffmpegProcess.read(outFileName);\n            let bitrate: string = `0`;\n            switch (format) {\n                case `LP2`:\n                    bitrate = `128`;\n                    break;\n                case `LP105`:\n                    bitrate = `102`;\n                    break;\n                case `LP4`:\n                    bitrate = `64`;\n                    break;\n            }\n            result = await this.atracdencProcess!.encode(data.buffer, bitrate);\n        }\n        this.ffmpegProcess.worker.terminate();\n        this.atracdencProcess!.terminate();\n        return result;\n    }\n}\n","/* eslint no-restricted-globals: 0 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { NetMDUSBService } from './services/netmd';\nimport { NetMDMockService } from './services/netmd-mock';\nimport serviceRegistry from './services/registry';\n\nimport { store } from './redux/store';\nimport { actions as appActions } from './redux/app-feature';\nimport { actions as mainActions } from './redux/main-feature';\n\nimport App from './components/app';\n\nimport './index.css';\nimport './fonts/fonts.css';\n\nimport { FFMpegAudioExportService } from './services/audio-export';\nimport { MediaRecorderService } from './services/mediarecorder';\n\nserviceRegistry.netmdService = new NetMDUSBService({ debug: true });\n// serviceRegistry.netmdService = new NetMDMockService(); // Uncomment to work without a device attached\nserviceRegistry.audioExportService = new FFMpegAudioExportService();\nserviceRegistry.mediaRecorderService = new MediaRecorderService();\n\n(function setupEventHandlers() {\n    window.addEventListener('beforeunload', ev => {\n        let isUploading = store.getState().uploadDialog.visible;\n        if (!isUploading) {\n            return;\n        }\n        ev.preventDefault();\n        ev.returnValue = `Warning! Recording will be interrupted`;\n    });\n\n    if (navigator && navigator.usb) {\n        navigator.usb.ondisconnect = function() {\n            store.dispatch(appActions.setState('WELCOME'));\n        };\n    } else {\n        store.dispatch(appActions.setBrowserSupported(false));\n    }\n\n    // eslint-disable-next-line\n    let deferredPrompt: any;\n    window.addEventListener('beforeinstallprompt', (e: any) => {\n        e.preventDefault();\n        deferredPrompt = e;\n    });\n})();\n\n(function statusMonitorManager() {\n    // Polls the device for its state while playing tracks\n    let statusMonitorInterval: ReturnType<typeof setInterval> | null = null;\n    let exceptionOccurred: boolean = false;\n\n    function shouldMonitorBeRunning(state: ReturnType<typeof store.getState>): boolean {\n        return (\n            !exceptionOccurred &&\n            // App ready\n            state.appState.mainView === 'MAIN' &&\n            state.appState.loading === false &&\n            // Disc playing\n            state.main.deviceStatus?.state === 'playing' &&\n            // No operational dialogs running\n            state.convertDialog.visible === false &&\n            state.uploadDialog.visible === false &&\n            state.recordDialog.visible === false &&\n            state.panicDialog.visible === false &&\n            state.errorDialog.visible === false &&\n            state.dumpDialog.visible === false\n        );\n    }\n\n    store.subscribe(function() {\n        const state = store.getState();\n        if (shouldMonitorBeRunning(state) === true && statusMonitorInterval === null) {\n            // start monitor\n            statusMonitorInterval = setInterval(async () => {\n                try {\n                    const deviceStatus = await serviceRegistry.netmdService!.getDeviceStatus();\n                    store.dispatch(mainActions.setDeviceStatus(deviceStatus));\n                } catch (e) {\n                    console.error(e);\n                    exceptionOccurred = true; // Stop monitor on exception\n                }\n            }, 5000);\n        } else if (shouldMonitorBeRunning(state) === false && statusMonitorInterval !== null) {\n            // stop monitor\n            clearInterval(statusMonitorInterval);\n            statusMonitorInterval = null;\n        }\n    });\n})();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// serviceWorker.unregister();\nserviceWorker.register();\n","import { sanitizeTitle, getPublicPathFor } from '../utils';\nimport Recorder from 'recorderjs';\n\nexport class MediaRecorderService {\n    public recorder: any;\n    public stream?: MediaStream;\n    public audioContext?: AudioContext;\n    public analyserNode?: AnalyserNode;\n    public gainNode?: GainNode;\n\n    playTestInput(deviceId: string) {\n        this.audioContext = new AudioContext();\n        this.gainNode = this.audioContext.createGain();\n        this.analyserNode = this.audioContext.createAnalyser();\n\n        this.initStream(deviceId).then(() => {\n            const source = this.audioContext!.createMediaStreamSource(this.stream!);\n            source.connect(this.gainNode!);\n            this.gainNode!.connect(this.analyserNode!);\n            this.analyserNode!.connect(this.audioContext!.destination);\n        });\n    }\n\n    stopTestInput() {\n        if (!this.audioContext) {\n            return;\n        }\n        this.audioContext?.close();\n        delete this.audioContext;\n        this.closeStream();\n    }\n\n    async initStream(deviceId: string) {\n        const recordConstraints = {\n            // Try to set the best recording params for ripping the audio tracks\n            autoGainControl: false,\n            channelCount: 2,\n            deviceId: deviceId,\n            echoCancellation: false,\n            noiseSuppression: false,\n            sampleRate: 44100,\n            highpassFilter: false,\n        };\n        this.stream = await navigator.mediaDevices.getUserMedia({ audio: recordConstraints });\n\n        // Dump recording settings\n        const audioTracks = this.stream.getAudioTracks();\n        if (audioTracks.length > 0) {\n            console.log('Record Setings:', audioTracks[0].getSettings());\n        }\n    }\n\n    async startRecording() {\n        this.audioContext = new AudioContext();\n        const input = this.audioContext.createMediaStreamSource(this.stream!);\n        this.recorder = new Recorder(input, { workerPath: getPublicPathFor(`recorderWorker.js`) });\n        this.recorder.record();\n    }\n\n    async stopRecording() {\n        this.recorder.stop();\n    }\n\n    async closeStream() {\n        this.stream?.getTracks().forEach(track => track.stop());\n    }\n\n    downloadRecorded(title: string) {\n        this.recorder.exportWAV((buffer: Blob) => {\n            let url = URL.createObjectURL(buffer);\n            let a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n            a.href = url;\n            a.download = `${sanitizeTitle(title)}.wav`;\n            a.click();\n            window.URL.revokeObjectURL(url);\n            document.body.removeChild(a);\n        });\n    }\n}\n"],"sourceRoot":""}